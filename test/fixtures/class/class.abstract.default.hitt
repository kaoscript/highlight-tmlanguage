original file
-----------------------------------
extern console

abstract class AbstractGreetings {
    private {
        _message: string = ''
    }
    
    constructor() {
        this('Hello!')
    }
    
    constructor(@message)
    
    abstract greet(name): String
}

class Greetings extends AbstractGreetings {
    greet(name) => `\(@message)\nIt's nice to meet you, \(name).`
}

let hello = new Greetings('Hello world!')

console.log(hello.greet('miss White'))
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>extern console
 extern
 ^^^^^^
 source.ks keyword.control.dependency.extern.ks
        
       ^
       source.ks
        console
        ^^^^^^^
        source.ks variable.other.constant.ks
>
>
 
 ^
 source.ks
>
>abstract class AbstractGreetings {
 abstract
 ^^^^^^^^
 source.ks storage.modifier.abstract.ks
          
         ^
         source.ks
          class
          ^^^^^
          source.ks storage.type.class.ks
                
               ^
               source.ks
                AbstractGreetings
                ^^^^^^^^^^^^^^^^^
                source.ks entity.name.type.class.ks
                                  
                                 ^
                                 source.ks
                                  {
                                  ^
                                  source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    private {
     
 ^^^^
 source.ks
     private
     ^^^^^^^
     source.ks storage.modifier.access.ks
             
            ^
            source.ks
             {
             ^
             source.ks punctuation.definition.members.begin.bracket.curly.ks
>
>        _message: string = ''
         
 ^^^^^^^^
 source.ks
         _message
         ^^^^^^^^
         source.ks entity.name.variable.field.ks
                 :
                 ^
                 source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                   
                  ^
                  source.ks meta.type.annotation.ks
                   string
                   ^^^^^^
                   source.ks meta.type.annotation.ks support.type.primitive.ks
                          
                         ^
                         source.ks meta.type.annotation.ks
                          =
                          ^
                          source.ks keyword.operator.assignment.ks
                            
                           ^
                           source.ks
                            '
                            ^
                            source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                             '
                             ^
                             source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.members.end.bracket.curly.ks
>
>    
     
 ^^^^^
 source.ks
>
>    constructor() {
     
 ^^^^
 source.ks
     constructor
     ^^^^^^^^^^^
     source.ks storage.type.constructor.ks
                (
                ^
                source.ks punctuation.definition.parameters.begin.bracket.round.ks
                 )
                 ^
                 source.ks punctuation.definition.parameters.end.bracket.round.ks
                   
                  ^
                  source.ks
                   {
                   ^
                   source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        this('Hello!')
         
 ^^^^^^^^
 source.ks
         this
         ^^^^
         source.ks entity.name.function.ks variable.language.this.ks
             (
             ^
             source.ks punctuation.definition.arguments.begin.bracket.round.ks
              '
              ^
              source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
               Hello!
               ^^^^^^
               source.ks string.quoted.single.ks
                     '
                     ^
                     source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                      )
                      ^
                      source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>    
     
 ^^^^^
 source.ks
>
>    constructor(@message)
     
 ^^^^
 source.ks
     constructor
     ^^^^^^^^^^^
     source.ks storage.type.constructor.ks
                (
                ^
                source.ks punctuation.definition.parameters.begin.bracket.round.ks
                 @
                 ^
                 source.ks storage.modifier.at.ks
                  message
                  ^^^^^^^
                  source.ks variable.parameter.ks
                         )
                         ^
                         source.ks punctuation.definition.parameters.end.bracket.round.ks
>
>    
     
 ^^^^^
 source.ks
>
>    abstract greet(name): String
     
 ^^^^
 source.ks
     abstract
     ^^^^^^^^
     source.ks storage.modifier.abstract.ks
              
             ^
             source.ks
              greet
              ^^^^^
              source.ks entity.name.function.ks
                   (
                   ^
                   source.ks punctuation.definition.parameters.begin.bracket.round.ks
                    name
                    ^^^^
                    source.ks variable.parameter.ks
                        )
                        ^
                        source.ks punctuation.definition.parameters.end.bracket.round.ks
                         :
                         ^
                         source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                           
                          ^
                          source.ks meta.function.return-type.ks
                           String
                           ^^^^^^
                           source.ks meta.function.return-type.ks support.type.primitive.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>class Greetings extends AbstractGreetings {
 class
 ^^^^^
 source.ks storage.type.class.ks
       
      ^
      source.ks
       Greetings
       ^^^^^^^^^
       source.ks entity.name.type.class.ks
                 
                ^
                source.ks
                 extends
                 ^^^^^^^
                 source.ks storage.modifier.extends.ks
                         
                        ^
                        source.ks
                         AbstractGreetings
                         ^^^^^^^^^^^^^^^^^
                         source.ks entity.name.type.class.ks
                                           
                                          ^
                                          source.ks
                                           {
                                           ^
                                           source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    greet(name) => `\(@message)\nIt's nice to meet you, \(name).`
     
 ^^^^
 source.ks
     greet
     ^^^^^
     source.ks entity.name.function.ks
          (
          ^
          source.ks punctuation.definition.parameters.begin.bracket.round.ks
           name
           ^^^^
           source.ks variable.parameter.ks
               )
               ^
               source.ks punctuation.definition.parameters.end.bracket.round.ks
                 
                ^
                source.ks
                 =>
                 ^^
                 source.ks storage.type.function.arrow.ks
                    
                   ^
                   source.ks
                    `
                    ^
                    source.ks punctuation.definition.string.template.begin.ks
                     \(
                     ^^
                     source.ks punctuation.definition.template-expression.begin.ks
                       @
                       ^
                       source.ks storage.modifier.instance.ks
                        message
                        ^^^^^^^
                        source.ks variable.other.instance.ks
                               )
                               ^
                               source.ks punctuation.definition.template-expression.end.ks
                                \n
                                ^^
                                source.ks constant.character.escape.ks
                                  It's nice to meet you, 
                                  ^^^^^^^^^^^^^^^^^^^^^^^
                                  source.ks string.template.ks
                                                         \(
                                                         ^^
                                                         source.ks punctuation.definition.template-expression.begin.ks
                                                           name
                                                           ^^^^
                                                           source.ks variable.other.ks
                                                               )
                                                               ^
                                                               source.ks punctuation.definition.template-expression.end.ks
                                                                .
                                                                ^
                                                                source.ks string.template.ks
                                                                 `
                                                                 ^
                                                                 source.ks punctuation.definition.string.template.end.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>let hello = new Greetings('Hello world!')
 let
 ^^^
 source.ks storage.type.readwrite.ks
     
    ^
    source.ks
     hello
     ^^^^^
     source.ks meta.definition.variable.ks variable.other.readwrite.ks
           
          ^
          source.ks
           =
           ^
           source.ks keyword.operator.assignment.ks
             
            ^
            source.ks
             new
             ^^^
             source.ks keyword.operator.new.ks
                 
                ^
                source.ks
                 Greetings
                 ^^^^^^^^^
                 source.ks entity.name.type.ks
                          (
                          ^
                          source.ks punctuation.definition.arguments.begin.bracket.round.ks
                           '
                           ^
                           source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                            Hello world!
                            ^^^^^^^^^^^^
                            source.ks string.quoted.single.ks
                                        '
                                        ^
                                        source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                         )
                                         ^
                                         source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>
 
 ^
 source.ks
>
>console.log(hello.greet('miss White'))
 console
 ^^^^^^^
 source.ks variable.other.object.ks
        .
        ^
        source.ks punctuation.accessor.object.ks
         log
         ^^^
         source.ks entity.name.function.ks
            (
            ^
            source.ks punctuation.definition.arguments.begin.bracket.round.ks
             hello
             ^^^^^
             source.ks variable.other.object.ks
                  .
                  ^
                  source.ks punctuation.accessor.object.ks
                   greet
                   ^^^^^
                   source.ks entity.name.function.ks
                        (
                        ^
                        source.ks punctuation.definition.arguments.begin.bracket.round.ks
                         '
                         ^
                         source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                          miss White
                          ^^^^^^^^^^
                          source.ks string.quoted.single.ks
                                    '
                                    ^
                                    source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                     )
                                     ^
                                     source.ks punctuation.definition.arguments.end.bracket.round.ks
                                      )
                                      ^
                                      source.ks punctuation.definition.arguments.end.bracket.round.ks