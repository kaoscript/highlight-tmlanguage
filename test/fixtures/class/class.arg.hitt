original file
-----------------------------------
class Greetings {
    private {
        _message: string = ''
    }

    constructor() {
        this('Hello!')
    }

    constructor(@message)

    greet(name: string): string {
        return this._message + '\nIt\'s nice to meet you, ' + name + '.'
    }
}

var hello = Greetings.new('Hello world!')

expect(hello.greet('miss White')).to.equal('Hello world!\nIt\'s nice to meet you, miss White.')
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>class Greetings {
 class
 ^^^^^
 source.ks storage.type.class.ks
       
      ^
      source.ks
       Greetings
       ^^^^^^^^^
       source.ks entity.name.type.class.ks
                 
                ^
                source.ks
                 {
                 ^
                 source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    private {
     
 ^^^^
 source.ks
     private
     ^^^^^^^
     source.ks storage.modifier.access.ks
             
            ^
            source.ks
             {
             ^
             source.ks punctuation.definition.members.begin.bracket.curly.ks
>
>        _message: string = ''
         
 ^^^^^^^^
 source.ks
         _message
         ^^^^^^^^
         source.ks entity.name.variable.field.ks
                 :
                 ^
                 source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                   
                  ^
                  source.ks meta.type.annotation.ks
                   string
                   ^^^^^^
                   source.ks meta.type.annotation.ks support.type.primitive.ks
                          
                         ^
                         source.ks meta.type.annotation.ks
                          =
                          ^
                          source.ks keyword.operator.assignment.ks
                            
                           ^
                           source.ks
                            '
                            ^
                            source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                             '
                             ^
                             source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.members.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>    constructor() {
     
 ^^^^
 source.ks
     constructor
     ^^^^^^^^^^^
     source.ks storage.type.constructor.ks
                (
                ^
                source.ks punctuation.definition.parameters.begin.bracket.round.ks
                 )
                 ^
                 source.ks punctuation.definition.parameters.end.bracket.round.ks
                   
                  ^
                  source.ks
                   {
                   ^
                   source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        this('Hello!')
         
 ^^^^^^^^
 source.ks
         this
         ^^^^
         source.ks entity.name.function.ks variable.language.this.ks
             (
             ^
             source.ks punctuation.definition.arguments.begin.bracket.round.ks
              '
              ^
              source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
               Hello!
               ^^^^^^
               source.ks string.quoted.single.ks
                     '
                     ^
                     source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                      )
                      ^
                      source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>    constructor(@message)
     
 ^^^^
 source.ks
     constructor
     ^^^^^^^^^^^
     source.ks storage.type.constructor.ks
                (
                ^
                source.ks punctuation.definition.parameters.begin.bracket.round.ks
                 @
                 ^
                 source.ks storage.modifier.at.ks
                  message
                  ^^^^^^^
                  source.ks variable.parameter.ks
                         )
                         ^
                         source.ks punctuation.definition.parameters.end.bracket.round.ks
>
>
 
 ^
 source.ks
>
>    greet(name: string): string {
     
 ^^^^
 source.ks
     greet
     ^^^^^
     source.ks entity.name.function.ks
          (
          ^
          source.ks punctuation.definition.parameters.begin.bracket.round.ks
           name
           ^^^^
           source.ks variable.parameter.ks
               :
               ^
               source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                 
                ^
                source.ks meta.type.annotation.ks
                 string
                 ^^^^^^
                 source.ks meta.type.annotation.ks support.type.primitive.ks
                       )
                       ^
                       source.ks punctuation.definition.parameters.end.bracket.round.ks
                        :
                        ^
                        source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                          
                         ^
                         source.ks meta.function.return-type.ks
                          string
                          ^^^^^^
                          source.ks meta.function.return-type.ks support.type.primitive.ks
                                 
                                ^
                                source.ks
                                 {
                                 ^
                                 source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        return this._message + '\nIt\'s nice to meet you, ' + name + '.'
         
 ^^^^^^^^
 source.ks
         return
         ^^^^^^
         source.ks keyword.control.flow.return.ks
                
               ^
               source.ks
                this
                ^^^^
                source.ks variable.language.this.ks
                    .
                    ^
                    source.ks punctuation.accessor.object.ks
                     _message
                     ^^^^^^^^
                     source.ks variable.other.property.object.ks
                              
                             ^
                             source.ks
                              +
                              ^
                              source.ks keyword.operator.arithmetic.ks
                                
                               ^
                               source.ks
                                '
                                ^
                                source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                                 \n
                                 ^^
                                 source.ks string.quoted.single.ks constant.character.escape.ks
                                   It
                                   ^^
                                   source.ks string.quoted.single.ks
                                     \'
                                     ^^
                                     source.ks string.quoted.single.ks constant.character.escape.ks
                                       s nice to meet you, 
                                       ^^^^^^^^^^^^^^^^^^^^
                                       source.ks string.quoted.single.ks
                                                           '
                                                           ^
                                                           source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                                             
                                                            ^
                                                            source.ks
                                                             +
                                                             ^
                                                             source.ks keyword.operator.arithmetic.ks
                                                               
                                                              ^
                                                              source.ks
                                                               name
                                                               ^^^^
                                                               source.ks variable.other.ks
                                                                    
                                                                   ^
                                                                   source.ks
                                                                    +
                                                                    ^
                                                                    source.ks keyword.operator.arithmetic.ks
                                                                      
                                                                     ^
                                                                     source.ks
                                                                      '
                                                                      ^
                                                                      source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                                                                       .
                                                                       ^
                                                                       source.ks string.quoted.single.ks
                                                                        '
                                                                        ^
                                                                        source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>var hello = Greetings.new('Hello world!')
 var
 ^^^
 source.ks storage.type.constant.ks
     
    ^
    source.ks
     hello
     ^^^^^
     source.ks meta.definition.variable.ks variable.other.ks
           
          ^
          source.ks
           =
           ^
           source.ks keyword.operator.assignment.ks
             
            ^
            source.ks
             Greetings
             ^^^^^^^^^
             source.ks variable.other.object.ks
                      .
                      ^
                      source.ks punctuation.accessor.object.ks
                       new
                       ^^^
                       source.ks entity.name.function.ks
                          (
                          ^
                          source.ks punctuation.definition.arguments.begin.bracket.round.ks
                           '
                           ^
                           source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                            Hello world!
                            ^^^^^^^^^^^^
                            source.ks string.quoted.single.ks
                                        '
                                        ^
                                        source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                         )
                                         ^
                                         source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>
 
 ^
 source.ks
>
>expect(hello.greet('miss White')).to.equal('Hello world!\nIt\'s nice to meet you, miss White.')
 expect
 ^^^^^^
 source.ks entity.name.function.ks
       (
       ^
       source.ks punctuation.definition.arguments.begin.bracket.round.ks
        hello
        ^^^^^
        source.ks variable.other.object.ks
             .
             ^
             source.ks punctuation.accessor.object.ks
              greet
              ^^^^^
              source.ks entity.name.function.ks
                   (
                   ^
                   source.ks punctuation.definition.arguments.begin.bracket.round.ks
                    '
                    ^
                    source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                     miss White
                     ^^^^^^^^^^
                     source.ks string.quoted.single.ks
                               '
                               ^
                               source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                )
                                ^
                                source.ks punctuation.definition.arguments.end.bracket.round.ks
                                 )
                                 ^
                                 source.ks punctuation.definition.arguments.end.bracket.round.ks
                                  .
                                  ^
                                  source.ks punctuation.accessor.object.ks
                                   to
                                   ^^
                                   source.ks variable.other.object.ks
                                     .
                                     ^
                                     source.ks punctuation.accessor.object.ks
                                      equal
                                      ^^^^^
                                      source.ks entity.name.function.ks
                                           (
                                           ^
                                           source.ks punctuation.definition.arguments.begin.bracket.round.ks
                                            '
                                            ^
                                            source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                                             Hello world!
                                             ^^^^^^^^^^^^
                                             source.ks string.quoted.single.ks
                                                         \n
                                                         ^^
                                                         source.ks string.quoted.single.ks constant.character.escape.ks
                                                           It
                                                           ^^
                                                           source.ks string.quoted.single.ks
                                                             \'
                                                             ^^
                                                             source.ks string.quoted.single.ks constant.character.escape.ks
                                                               s nice to meet you, miss White.
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                               source.ks string.quoted.single.ks
                                                                                              '
                                                                                              ^
                                                                                              source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                                                                               )
                                                                                               ^
                                                                                               source.ks punctuation.definition.arguments.end.bracket.round.ks