original file
-----------------------------------
class Greetings {
    private {
        _message: string = ''
    }
    
    constructor() {
        this('Hello!')
    }
    
    constructor(@message())
    
    greet(name: string): string {
        return @message + '\nIt\'s nice to meet you, ' + name + '.'
    }
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>class Greetings {
 class
 ^^^^^
 source.ks storage.type.class.ks
       
      ^
      source.ks
       Greetings
       ^^^^^^^^^
       source.ks entity.name.type.class.ks
                 
                ^
                source.ks
                 {
                 ^
                 source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    private {
     
 ^^^^
 source.ks
     private
     ^^^^^^^
     source.ks storage.modifier.access.ks
             
            ^
            source.ks
             {
             ^
             source.ks punctuation.definition.members.begin.bracket.curly.ks
>
>        _message: string = ''
         
 ^^^^^^^^
 source.ks
         _message
         ^^^^^^^^
         source.ks entity.name.variable.field.ks
                 :
                 ^
                 source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                   
                  ^
                  source.ks meta.type.annotation.ks
                   string
                   ^^^^^^
                   source.ks meta.type.annotation.ks support.type.primitive.ks
                          
                         ^
                         source.ks meta.type.annotation.ks
                          =
                          ^
                          source.ks keyword.operator.assignment.ks
                            
                           ^
                           source.ks
                            '
                            ^
                            source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                             '
                             ^
                             source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.members.end.bracket.curly.ks
>
>    
     
 ^^^^^
 source.ks
>
>    constructor() {
     
 ^^^^
 source.ks
     constructor
     ^^^^^^^^^^^
     source.ks storage.type.constructor.ks
                (
                ^
                source.ks punctuation.definition.parameters.begin.bracket.round.ks
                 )
                 ^
                 source.ks punctuation.definition.parameters.end.bracket.round.ks
                   
                  ^
                  source.ks
                   {
                   ^
                   source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        this('Hello!')
         
 ^^^^^^^^
 source.ks
         this
         ^^^^
         source.ks entity.name.function.ks variable.language.this.ks
             (
             ^
             source.ks punctuation.definition.arguments.begin.bracket.round.ks
              '
              ^
              source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
               Hello!
               ^^^^^^
               source.ks string.quoted.single.ks
                     '
                     ^
                     source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                      )
                      ^
                      source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>    
     
 ^^^^^
 source.ks
>
>    constructor(@message())
     
 ^^^^
 source.ks
     constructor
     ^^^^^^^^^^^
     source.ks storage.type.constructor.ks
                (
                ^
                source.ks punctuation.definition.parameters.begin.bracket.round.ks
                 @
                 ^
                 source.ks storage.modifier.at.ks
                  message
                  ^^^^^^^
                  source.ks variable.parameter.ks
                         (
                         ^
                         source.ks
                          )
                          ^
                          source.ks punctuation.definition.parameters.end.bracket.round.ks
                           )
                           ^
                           source.ks
>
>    
     
 ^^^^^
 source.ks
>
>    greet(name: string): string {
     
 ^^^^
 source.ks
     greet
     ^^^^^
     source.ks entity.name.function.ks
          (
          ^
          source.ks punctuation.definition.parameters.begin.bracket.round.ks
           name
           ^^^^
           source.ks variable.parameter.ks
               :
               ^
               source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                 
                ^
                source.ks meta.type.annotation.ks
                 string
                 ^^^^^^
                 source.ks meta.type.annotation.ks support.type.primitive.ks
                       )
                       ^
                       source.ks punctuation.definition.parameters.end.bracket.round.ks
                        :
                        ^
                        source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                          
                         ^
                         source.ks meta.function.return-type.ks
                          string
                          ^^^^^^
                          source.ks meta.function.return-type.ks support.type.primitive.ks
                                 
                                ^
                                source.ks
                                 {
                                 ^
                                 source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        return @message + '\nIt\'s nice to meet you, ' + name + '.'
         
 ^^^^^^^^
 source.ks
         return
         ^^^^^^
         source.ks keyword.control.flow.return.ks
                
               ^
               source.ks
                @
                ^
                source.ks storage.modifier.instance.ks
                 message
                 ^^^^^^^
                 source.ks variable.other.instance.ks
                         
                        ^
                        source.ks
                         +
                         ^
                         source.ks keyword.operator.arithmetic.ks
                           
                          ^
                          source.ks
                           '
                           ^
                           source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                            \n
                            ^^
                            source.ks string.quoted.single.ks constant.character.escape.ks
                              It
                              ^^
                              source.ks string.quoted.single.ks
                                \'
                                ^^
                                source.ks string.quoted.single.ks constant.character.escape.ks
                                  s nice to meet you, 
                                  ^^^^^^^^^^^^^^^^^^^^
                                  source.ks string.quoted.single.ks
                                                      '
                                                      ^
                                                      source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                                        
                                                       ^
                                                       source.ks
                                                        +
                                                        ^
                                                        source.ks keyword.operator.arithmetic.ks
                                                          
                                                         ^
                                                         source.ks
                                                          name
                                                          ^^^^
                                                          source.ks variable.other.ks
                                                               
                                                              ^
                                                              source.ks
                                                               +
                                                               ^
                                                               source.ks keyword.operator.arithmetic.ks
                                                                 
                                                                ^
                                                                source.ks
                                                                 '
                                                                 ^
                                                                 source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                                                                  .
                                                                  ^
                                                                  source.ks string.quoted.single.ks
                                                                   '
                                                                   ^
                                                                   source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks