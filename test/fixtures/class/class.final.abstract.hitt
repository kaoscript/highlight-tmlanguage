original file
-----------------------------------
final abstract class Foobar {
    foobar(x: Number): String {
        return `\(x)`
    }
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>final abstract class Foobar {
 final
 ^^^^^
 source.ks storage.modifier.ks
       
      ^
      source.ks
       abstract
       ^^^^^^^^
       source.ks storage.modifier.abstract.ks
                
               ^
               source.ks
                class
                ^^^^^
                source.ks storage.type.class.ks
                      
                     ^
                     source.ks
                      Foobar
                      ^^^^^^
                      source.ks entity.name.type.class.ks
                             
                            ^
                            source.ks
                             {
                             ^
                             source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    foobar(x: Number): String {
     
 ^^^^
 source.ks
     foobar
     ^^^^^^
     source.ks entity.name.function.ks
           (
           ^
           source.ks punctuation.definition.parameters.begin.bracket.round.ks
            x
            ^
            source.ks variable.parameter.ks
             :
             ^
             source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
               
              ^
              source.ks meta.type.annotation.ks
               Number
               ^^^^^^
               source.ks meta.type.annotation.ks support.type.primitive.ks
                     )
                     ^
                     source.ks punctuation.definition.parameters.end.bracket.round.ks
                      :
                      ^
                      source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                        
                       ^
                       source.ks meta.function.return-type.ks
                        String
                        ^^^^^^
                        source.ks meta.function.return-type.ks support.type.primitive.ks
                               
                              ^
                              source.ks
                               {
                               ^
                               source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        return `\(x)`
         
 ^^^^^^^^
 source.ks
         return
         ^^^^^^
         source.ks keyword.control.flow.return.ks
                
               ^
               source.ks
                `
                ^
                source.ks punctuation.definition.string.template.begin.ks
                 \(
                 ^^
                 source.ks punctuation.definition.template-expression.begin.ks
                   x
                   ^
                   source.ks variable.other.ks
                    )
                    ^
                    source.ks punctuation.definition.template-expression.end.ks
                     `
                     ^
                     source.ks punctuation.definition.string.template.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks