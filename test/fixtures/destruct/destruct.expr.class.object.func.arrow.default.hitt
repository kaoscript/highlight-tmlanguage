original file
-----------------------------------
class Foobar {
    private {
        @x: Number
        @y: Number
    }
    constructor(fn) {
        fn(values => {
            {@x, @y} = values
        })
    }
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>class Foobar {
 class
 ^^^^^
 source.ks storage.type.class.ks
       
      ^
      source.ks
       Foobar
       ^^^^^^
       source.ks entity.name.type.class.ks
              
             ^
             source.ks
              {
              ^
              source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    private {
     
 ^^^^
 source.ks
     private
     ^^^^^^^
     source.ks storage.modifier.access.ks
             
            ^
            source.ks
             {
             ^
             source.ks punctuation.definition.members.begin.bracket.curly.ks
>
>        @x: Number
         
 ^^^^^^^^
 source.ks
         @
         ^
         source.ks storage.modifier.instance.ks
          x
          ^
          source.ks entity.name.variable.field.ks
           :
           ^
           source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
             
            ^
            source.ks meta.type.annotation.ks
             Number
             ^^^^^^
             source.ks meta.type.annotation.ks support.type.primitive.ks
>
>        @y: Number
         
 ^^^^^^^^
 source.ks
         @
         ^
         source.ks storage.modifier.instance.ks
          y
          ^
          source.ks entity.name.variable.field.ks
           :
           ^
           source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
             
            ^
            source.ks meta.type.annotation.ks
             Number
             ^^^^^^
             source.ks meta.type.annotation.ks support.type.primitive.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.members.end.bracket.curly.ks
>
>    constructor(fn) {
     
 ^^^^
 source.ks
     constructor
     ^^^^^^^^^^^
     source.ks storage.type.constructor.ks
                (
                ^
                source.ks punctuation.definition.parameters.begin.bracket.round.ks
                 fn
                 ^^
                 source.ks variable.parameter.ks
                   )
                   ^
                   source.ks punctuation.definition.parameters.end.bracket.round.ks
                     
                    ^
                    source.ks
                     {
                     ^
                     source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        fn(values => {
         
 ^^^^^^^^
 source.ks
         fn
         ^^
         source.ks entity.name.function.ks
           (
           ^
           source.ks punctuation.definition.arguments.begin.bracket.round.ks
            values
            ^^^^^^
            source.ks variable.parameter.ks
                   
                  ^
                  source.ks
                   =>
                   ^^
                   source.ks storage.type.function.arrow.ks
                      
                     ^
                     source.ks
                      {
                      ^
                      source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>            {@x, @y} = values
             
 ^^^^^^^^^^^^
 source.ks
             {
             ^
             source.ks punctuation.definition.binding-pattern.object.begin.bracket.curly.ks
              @
              ^
              source.ks storage.modifier.at.ks
               x
               ^
               source.ks variable.other.ks
                ,
                ^
                source.ks punctuation.separator.comma.ks
                  
                 ^
                 source.ks
                  @
                  ^
                  source.ks storage.modifier.at.ks
                   y
                   ^
                   source.ks variable.other.ks
                    }
                    ^
                    source.ks punctuation.definition.binding-pattern.object.end.bracket.curly.ks
                      
                     ^
                     source.ks
                      =
                      ^
                      source.ks keyword.operator.assignment.ks
                        
                       ^
                       source.ks
                        values
                        ^^^^^^
                        source.ks variable.other.ks
>
>        })
         
 ^^^^^^^^
 source.ks
         }
         ^
         source.ks punctuation.definition.block.end.bracket.curly.ks
          )
          ^
          source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks