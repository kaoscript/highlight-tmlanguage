original file
-----------------------------------
let foo = { bar: { n1: 'hello', n2: 'world' } }

let {bar: { n1, n2: qux }} = foo

console.log(n1, qux)
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>let foo = { bar: { n1: 'hello', n2: 'world' } }
 let
 ^^^
 source.ks storage.type.readwrite.ks
     
    ^
    source.ks
     foo
     ^^^
     source.ks meta.definition.variable.ks variable.other.readwrite.ks
         
        ^
        source.ks
         =
         ^
         source.ks keyword.operator.assignment.ks
           
          ^
          source.ks
           {
           ^
           source.ks punctuation.definition.object.begin.bracket.curly.ks
             
            ^
            source.ks
             bar
             ^^^
             source.ks meta.object.key.ks
                :
                ^
                source.ks punctuation.separator.key-value.ks
                  
                 ^
                 source.ks
                  {
                  ^
                  source.ks punctuation.definition.object.begin.bracket.curly.ks
                    
                   ^
                   source.ks
                    n1
                    ^^
                    source.ks meta.object.key.ks
                      :
                      ^
                      source.ks punctuation.separator.key-value.ks
                        
                       ^
                       source.ks
                        '
                        ^
                        source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                         hello
                         ^^^^^
                         source.ks string.quoted.single.ks
                              '
                              ^
                              source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                               ,
                               ^
                               source.ks punctuation.separator.comma.ks
                                 
                                ^
                                source.ks
                                 n2
                                 ^^
                                 source.ks meta.object.key.ks
                                   :
                                   ^
                                   source.ks punctuation.separator.key-value.ks
                                     
                                    ^
                                    source.ks
                                     '
                                     ^
                                     source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                                      world
                                      ^^^^^
                                      source.ks string.quoted.single.ks
                                           '
                                           ^
                                           source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                             
                                            ^
                                            source.ks
                                             }
                                             ^
                                             source.ks punctuation.definition.object.end.bracket.curly.ks
                                               
                                              ^
                                              source.ks
                                               }
                                               ^
                                               source.ks punctuation.definition.object.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>let {bar: { n1, n2: qux }} = foo
 let
 ^^^
 source.ks storage.type.readwrite.ks
     
    ^
    source.ks
     {
     ^
     source.ks punctuation.definition.binding-pattern.object.begin.bracket.curly.ks
      bar
      ^^^
      source.ks variable.other.ks
         :
         ^
         source.ks punctuation.separator.key-value.ks
           
          ^
          source.ks
           {
           ^
           source.ks punctuation.definition.binding-pattern.object.begin.bracket.curly.ks
             
            ^
            source.ks
             n1
             ^^
             source.ks variable.other.ks
               ,
               ^
               source.ks punctuation.separator.comma.ks
                 
                ^
                source.ks
                 n2
                 ^^
                 source.ks variable.other.ks
                   :
                   ^
                   source.ks punctuation.separator.key-value.ks
                     
                    ^
                    source.ks
                     qux
                     ^^^
                     source.ks variable.other.ks
                         
                        ^
                        source.ks
                         }
                         ^
                         source.ks punctuation.definition.binding-pattern.object.end.bracket.curly.ks
                          }
                          ^
                          source.ks punctuation.definition.binding-pattern.object.end.bracket.curly.ks
                            
                           ^
                           source.ks
                            =
                            ^
                            source.ks keyword.operator.assignment.ks
                              
                             ^
                             source.ks
                              foo
                              ^^^
                              source.ks variable.other.ks
>
>
 
 ^
 source.ks
>
>console.log(n1, qux)
 console
 ^^^^^^^
 source.ks variable.other.object.ks
        .
        ^
        source.ks punctuation.accessor.object.ks
         log
         ^^^
         source.ks entity.name.function.ks
            (
            ^
            source.ks punctuation.definition.arguments.begin.bracket.round.ks
             n1
             ^^
             source.ks variable.other.ks
               ,
               ^
               source.ks punctuation.separator.comma.ks
                 
                ^
                source.ks
                 qux
                 ^^^
                 source.ks variable.other.ks
                    )
                    ^
                    source.ks punctuation.definition.arguments.end.bracket.round.ks