original file
-----------------------------------
namespace NS {
    export func foo() {
    }
    export func bar() {
    }
    export func qux() {
    }
}

export NS.foo => nsFoo, NS.bar => nsBar, NS.qux => nsQux
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>namespace NS {
 namespace
 ^^^^^^^^^
 source.ks storage.type.namespace.ks
           
          ^
          source.ks
           NS
           ^^
           source.ks entity.name.type.namespace.ks
              
             ^
             source.ks
              {
              ^
              source.ks punctuation.definition.namespace.begin.bracket.curly.ks
>
>    export func foo() {
     
 ^^^^
 source.ks
     export
     ^^^^^^
     source.ks keyword.control.export.ks
            
           ^
           source.ks
            func
            ^^^^
            source.ks storage.type.function.ks
                 
                ^
                source.ks
                 foo
                 ^^^
                 source.ks entity.name.function.ks
                    (
                    ^
                    source.ks punctuation.definition.parameters.begin.bracket.round.ks
                     )
                     ^
                     source.ks punctuation.definition.parameters.end.bracket.round.ks
                       
                      ^
                      source.ks
                       {
                       ^
                       source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>    export func bar() {
     
 ^^^^
 source.ks
     export
     ^^^^^^
     source.ks keyword.control.export.ks
            
           ^
           source.ks
            func
            ^^^^
            source.ks storage.type.function.ks
                 
                ^
                source.ks
                 bar
                 ^^^
                 source.ks entity.name.function.ks
                    (
                    ^
                    source.ks punctuation.definition.parameters.begin.bracket.round.ks
                     )
                     ^
                     source.ks punctuation.definition.parameters.end.bracket.round.ks
                       
                      ^
                      source.ks
                       {
                       ^
                       source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>    export func qux() {
     
 ^^^^
 source.ks
     export
     ^^^^^^
     source.ks keyword.control.export.ks
            
           ^
           source.ks
            func
            ^^^^
            source.ks storage.type.function.ks
                 
                ^
                source.ks
                 qux
                 ^^^
                 source.ks entity.name.function.ks
                    (
                    ^
                    source.ks punctuation.definition.parameters.begin.bracket.round.ks
                     )
                     ^
                     source.ks punctuation.definition.parameters.end.bracket.round.ks
                       
                      ^
                      source.ks
                       {
                       ^
                       source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.namespace.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>export NS.foo => nsFoo, NS.bar => nsBar, NS.qux => nsQux
 export
 ^^^^^^
 source.ks keyword.control.export.ks
        
       ^
       source.ks
        NS
        ^^
        source.ks variable.other.object.ks
          .
          ^
          source.ks punctuation.accessor.object.ks
           foo
           ^^^
           source.ks variable.other.property.object.ks
               
              ^
              source.ks
               =>
               ^^
               source.ks keyword.control.export.arrow.ks
                  
                 ^
                 source.ks
                  nsFoo
                  ^^^^^
                  source.ks variable.other.ks
                       ,
                       ^
                       source.ks punctuation.separator.comma.ks
                         
                        ^
                        source.ks
                         NS
                         ^^
                         source.ks variable.other.object.ks
                           .
                           ^
                           source.ks punctuation.accessor.object.ks
                            bar
                            ^^^
                            source.ks variable.other.property.object.ks
                                
                               ^
                               source.ks
                                =>
                                ^^
                                source.ks keyword.control.export.arrow.ks
                                   
                                  ^
                                  source.ks
                                   nsBar
                                   ^^^^^
                                   source.ks variable.other.ks
                                        ,
                                        ^
                                        source.ks punctuation.separator.comma.ks
                                          
                                         ^
                                         source.ks
                                          NS
                                          ^^
                                          source.ks variable.other.object.ks
                                            .
                                            ^
                                            source.ks punctuation.accessor.object.ks
                                             qux
                                             ^^^
                                             source.ks variable.other.property.object.ks
                                                 
                                                ^
                                                source.ks
                                                 =>
                                                 ^^
                                                 source.ks keyword.control.export.arrow.ks
                                                    
                                                   ^
                                                   source.ks
                                                    nsQux
                                                    ^^^^^
                                                    source.ks variable.other.ks