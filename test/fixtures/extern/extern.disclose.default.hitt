original file
-----------------------------------
extern sealed class String
disclose String {
    split(...): Array<String>
    replace(...): String
    trim(): String
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>extern sealed class String
 extern
 ^^^^^^
 source.ks keyword.control.dependency.extern.ks
        
       ^
       source.ks
        sealed
        ^^^^^^
        source.ks storage.modifier.sealed.ks
               
              ^
              source.ks
               class
               ^^^^^
               source.ks storage.type.class.ks
                     
                    ^
                    source.ks
                     String
                     ^^^^^^
                     source.ks entity.name.type.class.ks
>
>disclose String {
 disclose
 ^^^^^^^^
 source.ks keyword.control.dependency.disclose.ks
          
         ^
         source.ks
          String
          ^^^^^^
          source.ks entity.name.type.ks
                 
                ^
                source.ks
                 {
                 ^
                 source.ks punctuation.definition.disclose.begin.bracket.curly.ks
>
>    split(...): Array<String>
     
 ^^^^
 source.ks
     split
     ^^^^^
     source.ks entity.name.function.ks
          (
          ^
          source.ks punctuation.definition.parameters.begin.bracket.round.ks
           ...
           ^^^
           source.ks keyword.operator.rest.ks
              )
              ^
              source.ks punctuation.definition.parameters.end.bracket.round.ks
               :
               ^
               source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                 
                ^
                source.ks meta.function.return-type.ks
                 Array
                 ^^^^^
                 source.ks meta.function.return-type.ks support.type.primitive.ks
                      <
                      ^
                      source.ks meta.function.return-type.ks punctuation.definition.typeparameters.begin.ks
                       String
                       ^^^^^^
                       source.ks meta.function.return-type.ks support.type.primitive.ks
                             >
                             ^
                             source.ks meta.function.return-type.ks punctuation.definition.typeparameters.end.ks
>
>    replace(...): String
     
 ^^^^
 source.ks
     replace
     ^^^^^^^
     source.ks entity.name.function.ks
            (
            ^
            source.ks punctuation.definition.parameters.begin.bracket.round.ks
             ...
             ^^^
             source.ks keyword.operator.rest.ks
                )
                ^
                source.ks punctuation.definition.parameters.end.bracket.round.ks
                 :
                 ^
                 source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                   
                  ^
                  source.ks meta.function.return-type.ks
                   String
                   ^^^^^^
                   source.ks meta.function.return-type.ks support.type.primitive.ks
>
>    trim(): String
     
 ^^^^
 source.ks
     trim
     ^^^^
     source.ks entity.name.function.ks
         (
         ^
         source.ks punctuation.definition.parameters.begin.bracket.round.ks
          )
          ^
          source.ks punctuation.definition.parameters.end.bracket.round.ks
           :
           ^
           source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
             
            ^
            source.ks meta.function.return-type.ks
             String
             ^^^^^^
             source.ks meta.function.return-type.ks support.type.primitive.ks
>
>}
 }
 ^
 source.ks punctuation.definition.disclose.end.bracket.curly.ks