original file
-----------------------------------
extern {
    foo(...)
    async bar()
    baz(value: Number): Number
    baz(value: String): String
    async qux(value: Number): Number
    async qux(value: String): String
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>extern {
 extern
 ^^^^^^
 source.ks keyword.control.dependency.extern.ks
        
       ^
       source.ks
        {
        ^
        source.ks punctuation.definition.extern.begin.bracket.curly.ks
>
>    foo(...)
     
 ^^^^
 source.ks
     foo
     ^^^
     source.ks entity.name.function.ks
        (
        ^
        source.ks punctuation.definition.parameters.begin.bracket.round.ks
         ...
         ^^^
         source.ks keyword.operator.rest.ks
            )
            ^
            source.ks punctuation.definition.parameters.end.bracket.round.ks
>
>    async bar()
     
 ^^^^
 source.ks
     async
     ^^^^^
     source.ks storage.modifier.async.ks
           
          ^
          source.ks
           bar
           ^^^
           source.ks entity.name.function.ks
              (
              ^
              source.ks punctuation.definition.parameters.begin.bracket.round.ks
               )
               ^
               source.ks punctuation.definition.parameters.end.bracket.round.ks
>
>    baz(value: Number): Number
     
 ^^^^
 source.ks
     baz
     ^^^
     source.ks entity.name.function.ks
        (
        ^
        source.ks punctuation.definition.parameters.begin.bracket.round.ks
         value
         ^^^^^
         source.ks variable.parameter.ks
              :
              ^
              source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                
               ^
               source.ks meta.type.annotation.ks
                Number
                ^^^^^^
                source.ks meta.type.annotation.ks support.type.primitive.ks
                      )
                      ^
                      source.ks punctuation.definition.parameters.end.bracket.round.ks
                       :
                       ^
                       source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                         
                        ^
                        source.ks meta.function.return-type.ks
                         Number
                         ^^^^^^
                         source.ks meta.function.return-type.ks support.type.primitive.ks
>
>    baz(value: String): String
     
 ^^^^
 source.ks
     baz
     ^^^
     source.ks entity.name.function.ks
        (
        ^
        source.ks punctuation.definition.parameters.begin.bracket.round.ks
         value
         ^^^^^
         source.ks variable.parameter.ks
              :
              ^
              source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                
               ^
               source.ks meta.type.annotation.ks
                String
                ^^^^^^
                source.ks meta.type.annotation.ks support.type.primitive.ks
                      )
                      ^
                      source.ks punctuation.definition.parameters.end.bracket.round.ks
                       :
                       ^
                       source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                         
                        ^
                        source.ks meta.function.return-type.ks
                         String
                         ^^^^^^
                         source.ks meta.function.return-type.ks support.type.primitive.ks
>
>    async qux(value: Number): Number
     
 ^^^^
 source.ks
     async
     ^^^^^
     source.ks storage.modifier.async.ks
           
          ^
          source.ks
           qux
           ^^^
           source.ks entity.name.function.ks
              (
              ^
              source.ks punctuation.definition.parameters.begin.bracket.round.ks
               value
               ^^^^^
               source.ks variable.parameter.ks
                    :
                    ^
                    source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                      
                     ^
                     source.ks meta.type.annotation.ks
                      Number
                      ^^^^^^
                      source.ks meta.type.annotation.ks support.type.primitive.ks
                            )
                            ^
                            source.ks punctuation.definition.parameters.end.bracket.round.ks
                             :
                             ^
                             source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                               
                              ^
                              source.ks meta.function.return-type.ks
                               Number
                               ^^^^^^
                               source.ks meta.function.return-type.ks support.type.primitive.ks
>
>    async qux(value: String): String
     
 ^^^^
 source.ks
     async
     ^^^^^
     source.ks storage.modifier.async.ks
           
          ^
          source.ks
           qux
           ^^^
           source.ks entity.name.function.ks
              (
              ^
              source.ks punctuation.definition.parameters.begin.bracket.round.ks
               value
               ^^^^^
               source.ks variable.parameter.ks
                    :
                    ^
                    source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                      
                     ^
                     source.ks meta.type.annotation.ks
                      String
                      ^^^^^^
                      source.ks meta.type.annotation.ks support.type.primitive.ks
                            )
                            ^
                            source.ks punctuation.definition.parameters.end.bracket.round.ks
                             :
                             ^
                             source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                               
                              ^
                              source.ks meta.function.return-type.ks
                               String
                               ^^^^^^
                               source.ks meta.function.return-type.ks support.type.primitive.ks
>
>}
 }
 ^
 source.ks punctuation.definition.extern.end.bracket.curly.ks