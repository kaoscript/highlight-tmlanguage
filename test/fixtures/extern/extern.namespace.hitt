original file
-----------------------------------
extern sealed namespace Math1 {
    var PI: Number
    func pow(...): Number
}


extern sealed namespace Math2 {
    PI: Number
    pow(...): Number
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>extern sealed namespace Math1 {
 extern
 ^^^^^^
 source.ks keyword.control.dependency.extern.ks
        
       ^
       source.ks
        sealed
        ^^^^^^
        source.ks storage.modifier.sealed.ks
               
              ^
              source.ks
               namespace
               ^^^^^^^^^
               source.ks storage.type.namespace.ks
                         
                        ^
                        source.ks
                         Math1
                         ^^^^^
                         source.ks entity.name.type.namespace.ks
                               
                              ^
                              source.ks
                               {
                               ^
                               source.ks punctuation.definition.namespace.begin.bracket.curly.ks
>
>    var PI: Number
     
 ^^^^
 source.ks
     var
     ^^^
     source.ks storage.type.readwrite.ks
         
        ^
        source.ks
         PI
         ^^
         source.ks variable.other.constant.ks
           :
           ^
           source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
             
            ^
            source.ks meta.type.annotation.ks
             Number
             ^^^^^^
             source.ks meta.type.annotation.ks support.type.primitive.ks
>
>    func pow(...): Number
     
 ^^^^
 source.ks
     func
     ^^^^
     source.ks storage.type.function.ks
          
         ^
         source.ks
          pow
          ^^^
          source.ks entity.name.function.ks
             (
             ^
             source.ks punctuation.definition.parameters.begin.bracket.round.ks
              ...
              ^^^
              source.ks keyword.operator.rest.ks
                 )
                 ^
                 source.ks punctuation.definition.parameters.end.bracket.round.ks
                  :
                  ^
                  source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                    
                   ^
                   source.ks meta.function.return-type.ks
                    Number
                    ^^^^^^
                    source.ks meta.function.return-type.ks support.type.primitive.ks
>
>}
 }
 ^
 source.ks punctuation.definition.namespace.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>
 
 ^
 source.ks
>
>extern sealed namespace Math2 {
 extern
 ^^^^^^
 source.ks keyword.control.dependency.extern.ks
        
       ^
       source.ks
        sealed
        ^^^^^^
        source.ks storage.modifier.sealed.ks
               
              ^
              source.ks
               namespace
               ^^^^^^^^^
               source.ks storage.type.namespace.ks
                         
                        ^
                        source.ks
                         Math2
                         ^^^^^
                         source.ks entity.name.type.namespace.ks
                               
                              ^
                              source.ks
                               {
                               ^
                               source.ks punctuation.definition.namespace.begin.bracket.curly.ks
>
>    PI: Number
     
 ^^^^
 source.ks
     PI
     ^^
     source.ks variable.other.constant.ks
       :
       ^
       source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
         
        ^
        source.ks meta.type.annotation.ks
         Number
         ^^^^^^
         source.ks meta.type.annotation.ks support.type.primitive.ks
>
>    pow(...): Number
     
 ^^^^
 source.ks
     pow
     ^^^
     source.ks entity.name.function.ks
        (
        ^
        source.ks punctuation.definition.parameters.begin.bracket.round.ks
         ...
         ^^^
         source.ks keyword.operator.rest.ks
            )
            ^
            source.ks punctuation.definition.parameters.end.bracket.round.ks
             :
             ^
             source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
               
              ^
              source.ks meta.function.return-type.ks
               Number
               ^^^^^^
               source.ks meta.function.return-type.ks support.type.primitive.ks
>
>}
 }
 ^
 source.ks punctuation.definition.namespace.end.bracket.curly.ks