original file
-----------------------------------
heroes = ['leto', 'duncan', 'goku']

for    hero, index in heroes
    until hero == 'duncan'
    when index % 2 == 0
{
    console.log(hero)
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>heroes = ['leto', 'duncan', 'goku']
 heroes
 ^^^^^^
 source.ks variable.other.ks
        
       ^
       source.ks
        =
        ^
        source.ks keyword.operator.assignment.ks
          
         ^
         source.ks
          [
          ^
          source.ks punctuation.definition.array.begin.bracket.square.ks
           '
           ^
           source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
            leto
            ^^^^
            source.ks string.quoted.single.ks
                '
                ^
                source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                 ,
                 ^
                 source.ks punctuation.separator.comma.ks
                   
                  ^
                  source.ks
                   '
                   ^
                   source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                    duncan
                    ^^^^^^
                    source.ks string.quoted.single.ks
                          '
                          ^
                          source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                           ,
                           ^
                           source.ks punctuation.separator.comma.ks
                             
                            ^
                            source.ks
                             '
                             ^
                             source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                              goku
                              ^^^^
                              source.ks string.quoted.single.ks
                                  '
                                  ^
                                  source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                   ]
                                   ^
                                   source.ks punctuation.definition.array.end.bracket.square.ks
>
>
 
 ^
 source.ks
>
>for    hero, index in heroes
 for
 ^^^
 source.ks keyword.control.loop.for.ks
        
    ^^^^
    source.ks
        hero
        ^^^^
        source.ks variable.other.ks
            ,
            ^
            source.ks punctuation.separator.comma.ks
              
             ^
             source.ks
              index
              ^^^^^
              source.ks variable.other.ks
                    
                   ^
                   source.ks
                    in
                    ^^
                    source.ks keyword.operator.loop.in.ks
                       
                      ^
                      source.ks
                       heroes
                       ^^^^^^
                       source.ks variable.other.ks
>
>    until hero == 'duncan'
     
 ^^^^
 source.ks
     until
     ^^^^^
     source.ks keyword.operator.loop.until.ks
           
          ^
          source.ks
           hero
           ^^^^
           source.ks variable.other.ks
                
               ^
               source.ks
                ==
                ^^
                source.ks keyword.operator.comparison.ks
                   
                  ^
                  source.ks
                   '
                   ^
                   source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                    duncan
                    ^^^^^^
                    source.ks string.quoted.single.ks
                          '
                          ^
                          source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    when index % 2 == 0
     
 ^^^^
 source.ks
     when
     ^^^^
     source.ks keyword.operator.conditional.when.ks
          
         ^
         source.ks
          index
          ^^^^^
          source.ks variable.other.ks
                
               ^
               source.ks
                %
                ^
                source.ks keyword.operator.arithmetic.ks
                  
                 ^
                 source.ks
                  2
                  ^
                  source.ks constant.numeric.decimal.ks
                    
                   ^
                   source.ks
                    ==
                    ^^
                    source.ks keyword.operator.comparison.ks
                       
                      ^
                      source.ks
                       0
                       ^
                       source.ks constant.numeric.decimal.ks
>
>{
 {
 ^
 source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    console.log(hero)
     
 ^^^^
 source.ks
     console
     ^^^^^^^
     source.ks variable.other.object.ks
            .
            ^
            source.ks punctuation.accessor.object.ks
             log
             ^^^
             source.ks entity.name.function.ks
                (
                ^
                source.ks punctuation.definition.arguments.begin.bracket.round.ks
                 hero
                 ^^^^
                 source.ks variable.other.ks
                     )
                     ^
                     source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks