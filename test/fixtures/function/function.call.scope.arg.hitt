original file
-----------------------------------
func log(...args) {
    this.log(...args)
}

log*$(console, 'hello')
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>func log(...args) {
 func
 ^^^^
 source.ks storage.type.function.ks
      
     ^
     source.ks
      log
      ^^^
      source.ks entity.name.function.ks
         (
         ^
         source.ks punctuation.definition.parameters.begin.bracket.round.ks
          ...
          ^^^
          source.ks keyword.operator.rest.ks
             args
             ^^^^
             source.ks variable.parameter.ks
                 )
                 ^
                 source.ks punctuation.definition.parameters.end.bracket.round.ks
                   
                  ^
                  source.ks
                   {
                   ^
                   source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    this.log(...args)
     
 ^^^^
 source.ks
     this
     ^^^^
     source.ks variable.language.this.ks
         .
         ^
         source.ks punctuation.accessor.object.ks
          log
          ^^^
          source.ks entity.name.function.ks
             (
             ^
             source.ks punctuation.definition.arguments.begin.bracket.round.ks
              ...
              ^^^
              source.ks keyword.operator.spread.ks
                 args
                 ^^^^
                 source.ks variable.other.ks
                     )
                     ^
                     source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>log*$(console, 'hello')
 log
 ^^^
 source.ks entity.name.function.ks
    *$
    ^^
    source.ks keyword.operator.function.scope.ks
      (
      ^
      source.ks punctuation.definition.arguments.begin.bracket.round.ks
       console
       ^^^^^^^
       source.ks variable.other.ks
              ,
              ^
              source.ks punctuation.separator.comma.ks
                
               ^
               source.ks
                '
                ^
                source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                 hello
                 ^^^^^
                 source.ks string.quoted.single.ks
                      '
                      ^
                      source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                       )
                       ^
                       source.ks punctuation.definition.arguments.end.bracket.round.ks