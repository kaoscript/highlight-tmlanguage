original file
-----------------------------------
func foobar(functions: Array<(x: String): String>): Array<String> {
    return [fn('foobar') for const fn in functions]
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>func foobar(functions: Array<(x: String): String>): Array<String> {
 func
 ^^^^
 source.ks storage.type.function.ks
      
     ^
     source.ks
      foobar
      ^^^^^^
      source.ks entity.name.function.ks
            (
            ^
            source.ks punctuation.definition.parameters.begin.bracket.round.ks
             functions
             ^^^^^^^^^
             source.ks variable.parameter.ks
                      :
                      ^
                      source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                        
                       ^
                       source.ks meta.type.annotation.ks
                        Array
                        ^^^^^
                        source.ks meta.type.annotation.ks support.type.primitive.ks
                             <
                             ^
                             source.ks meta.type.annotation.ks punctuation.definition.typeparameters.begin.ks
                              (
                              ^
                              source.ks meta.type.annotation.ks punctuation.definition.parameters.begin.bracket.round.ks
                               x
                               ^
                               source.ks meta.type.annotation.ks variable.parameter.ks
                                :
                                ^
                                source.ks meta.type.annotation.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                                  
                                 ^
                                 source.ks meta.type.annotation.ks meta.type.annotation.ks
                                  String
                                  ^^^^^^
                                  source.ks meta.type.annotation.ks meta.type.annotation.ks support.type.primitive.ks
                                        )
                                        ^
                                        source.ks meta.type.annotation.ks punctuation.definition.parameters.end.bracket.round.ks
                                         :
                                         ^
                                         source.ks meta.type.annotation.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                                           
                                          ^
                                          source.ks meta.type.annotation.ks meta.function.return-type.ks
                                           String
                                           ^^^^^^
                                           source.ks meta.type.annotation.ks meta.function.return-type.ks support.type.primitive.ks
                                                 >
                                                 ^
                                                 source.ks meta.type.annotation.ks punctuation.definition.typeparameters.end.ks
                                                  )
                                                  ^
                                                  source.ks punctuation.definition.parameters.end.bracket.round.ks
                                                   :
                                                   ^
                                                   source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                                                     
                                                    ^
                                                    source.ks meta.function.return-type.ks
                                                     Array
                                                     ^^^^^
                                                     source.ks meta.function.return-type.ks support.type.primitive.ks
                                                          <
                                                          ^
                                                          source.ks meta.function.return-type.ks punctuation.definition.typeparameters.begin.ks
                                                           String
                                                           ^^^^^^
                                                           source.ks meta.function.return-type.ks support.type.primitive.ks
                                                                 >
                                                                 ^
                                                                 source.ks meta.function.return-type.ks punctuation.definition.typeparameters.end.ks
                                                                   
                                                                  ^
                                                                  source.ks
                                                                   {
                                                                   ^
                                                                   source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    return [fn('foobar') for const fn in functions]
     
 ^^^^
 source.ks
     return
     ^^^^^^
     source.ks keyword.control.flow.return.ks
            
           ^
           source.ks
            [
            ^
            source.ks punctuation.definition.array.begin.bracket.square.ks
             fn
             ^^
             source.ks entity.name.function.ks
               (
               ^
               source.ks punctuation.definition.arguments.begin.bracket.round.ks
                '
                ^
                source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                 foobar
                 ^^^^^^
                 source.ks string.quoted.single.ks
                       '
                       ^
                       source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                        )
                        ^
                        source.ks punctuation.definition.arguments.end.bracket.round.ks
                          
                         ^
                         source.ks
                          for
                          ^^^
                          source.ks keyword.control.loop.for.ks
                              
                             ^
                             source.ks
                              const
                              ^^^^^
                              source.ks storage.type.constant.ks
                                    
                                   ^
                                   source.ks
                                    fn
                                    ^^
                                    source.ks meta.definition.variable.ks variable.other.constant.ks
                                       
                                      ^
                                      source.ks
                                       in
                                       ^^
                                       source.ks keyword.control.loop.ks
                                          
                                         ^
                                         source.ks
                                          functions
                                          ^^^^^^^^^
                                          source.ks variable.other.ks
                                                   ]
                                                   ^
                                                   source.ks punctuation.definition.array.end.bracket.square.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks