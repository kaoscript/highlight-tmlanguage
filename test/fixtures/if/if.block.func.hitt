original file
-----------------------------------
func foo(x = 5) {
    if x == 5 {
        console.log('GIVE FIVE!')
    }
    else {
        console.log('BOO!')
    }
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>func foo(x = 5) {
 func
 ^^^^
 source.ks storage.type.function.ks
      
     ^
     source.ks
      foo
      ^^^
      source.ks entity.name.function.ks
         (
         ^
         source.ks punctuation.definition.parameters.begin.bracket.round.ks
          x
          ^
          source.ks variable.parameter.function.ks
            
           ^
           source.ks
            =
            ^
            source.ks keyword.operator.assignment.ks
              
             ^
             source.ks
              5
              ^
              source.ks constant.numeric.decimal.ks
               )
               ^
               source.ks punctuation.definition.parameters.end.bracket.round.ks
                 
                ^
                source.ks
                 {
                 ^
                 source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    if x == 5 {
     
 ^^^^
 source.ks
     if
     ^^
     source.ks keyword.control.conditional.if.ks
        
       ^
       source.ks
        x
        ^
        source.ks variable.other.ks
          
         ^
         source.ks
          ==
          ^^
          source.ks keyword.operator.comparison.ks
             
            ^
            source.ks
             5
             ^
             source.ks constant.numeric.decimal.ks
               
              ^
              source.ks
               {
               ^
               source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        console.log('GIVE FIVE!')
         
 ^^^^^^^^
 source.ks
         console
         ^^^^^^^
         source.ks variable.other.object.ks
                .
                ^
                source.ks punctuation.accessor.object.ks
                 log
                 ^^^
                 source.ks entity.name.function.ks
                    (
                    ^
                    source.ks punctuation.definition.arguments.begin.bracket.round.ks
                     '
                     ^
                     source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                      GIVE FIVE!
                      ^^^^^^^^^^
                      source.ks string.quoted.single.ks
                                '
                                ^
                                source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                 )
                                 ^
                                 source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>    else {
     
 ^^^^
 source.ks
     else
     ^^^^
     source.ks keyword.control.conditional.else.ks
          
         ^
         source.ks
          {
          ^
          source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        console.log('BOO!')
         
 ^^^^^^^^
 source.ks
         console
         ^^^^^^^
         source.ks variable.other.object.ks
                .
                ^
                source.ks punctuation.accessor.object.ks
                 log
                 ^^^
                 source.ks entity.name.function.ks
                    (
                    ^
                    source.ks punctuation.definition.arguments.begin.bracket.round.ks
                     '
                     ^
                     source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                      BOO!
                      ^^^^
                      source.ks string.quoted.single.ks
                          '
                          ^
                          source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                           )
                           ^
                           source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks