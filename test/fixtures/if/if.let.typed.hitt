original file
-----------------------------------
if let x: String = foobar() {
    console.log(x)
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>if let x: String = foobar() {
 if
 ^^
 source.ks keyword.control.conditional.if.ks
    
   ^
   source.ks
    let
    ^^^
    source.ks storage.type.readwrite.ks
        
       ^
       source.ks
        x
        ^
        source.ks meta.definition.variable.ks variable.other.readwrite.ks
         :
         ^
         source.ks meta.type.annotation.ks storage.modifier.type.ks
           
          ^
          source.ks meta.type.annotation.ks
           String
           ^^^^^^
           source.ks meta.type.annotation.ks support.type.primitive.ks
                  
                 ^
                 source.ks
                  =
                  ^
                  source.ks keyword.operator.assignment.ks
                    
                   ^
                   source.ks
                    foobar
                    ^^^^^^
                    source.ks entity.name.function.ks
                          (
                          ^
                          source.ks punctuation.definition.arguments.begin.bracket.round.ks
                           )
                           ^
                           source.ks punctuation.definition.arguments.end.bracket.round.ks
                             
                            ^
                            source.ks
                             {
                             ^
                             source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    console.log(x)
     
 ^^^^
 source.ks
     console
     ^^^^^^^
     source.ks variable.other.object.ks
            .
            ^
            source.ks punctuation.accessor.object.ks
             log
             ^^^
             source.ks entity.name.function.ks
                (
                ^
                source.ks punctuation.definition.arguments.begin.bracket.round.ks
                 x
                 ^
                 source.ks variable.other.ks
                  )
                  ^
                  source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks