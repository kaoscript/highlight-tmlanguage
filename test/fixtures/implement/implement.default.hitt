original file
-----------------------------------
class Shape {
    private {
        _color: string = ''
    }
    
    Shape(@color)
}

impl Shape {
    draw(canvas): string {
        return `I'm drawing a \(this._color) rectangle.`
    }
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>class Shape {
 class
 ^^^^^
 source.ks storage.type.class.ks
       
      ^
      source.ks
       Shape
       ^^^^^
       source.ks entity.name.type.class.ks
             
            ^
            source.ks
             {
             ^
             source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    private {
     
 ^^^^
 source.ks
     private
     ^^^^^^^
     source.ks storage.modifier.access.ks
             
            ^
            source.ks
             {
             ^
             source.ks punctuation.definition.members.begin.bracket.curly.ks
>
>        _color: string = ''
         
 ^^^^^^^^
 source.ks
         _color
         ^^^^^^
         source.ks entity.name.variable.field.ks
               :
               ^
               source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                 
                ^
                source.ks meta.type.annotation.ks
                 string
                 ^^^^^^
                 source.ks meta.type.annotation.ks support.type.primitive.ks
                        
                       ^
                       source.ks meta.type.annotation.ks
                        =
                        ^
                        source.ks keyword.operator.assignment.ks
                          
                         ^
                         source.ks
                          '
                          ^
                          source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                           '
                           ^
                           source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.members.end.bracket.curly.ks
>
>    
     
 ^^^^^
 source.ks
>
>    Shape(@color)
     
 ^^^^
 source.ks
     Shape
     ^^^^^
     source.ks entity.name.function.ks
          (
          ^
          source.ks punctuation.definition.parameters.begin.bracket.round.ks
           @
           ^
           source.ks storage.modifier.at.ks
            color
            ^^^^^
            source.ks variable.parameter.ks
                 )
                 ^
                 source.ks punctuation.definition.parameters.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>impl Shape {
 impl
 ^^^^
 source.ks keyword.control.implement.ks
      
     ^
     source.ks
      Shape
      ^^^^^
      source.ks entity.name.type.ks
            
           ^
           source.ks
            {
            ^
            source.ks punctuation.definition.implement.begin.bracket.curly.ks
>
>    draw(canvas): string {
     
 ^^^^
 source.ks
     draw
     ^^^^
     source.ks entity.name.function.ks
         (
         ^
         source.ks punctuation.definition.parameters.begin.bracket.round.ks
          canvas
          ^^^^^^
          source.ks variable.parameter.ks
                )
                ^
                source.ks punctuation.definition.parameters.end.bracket.round.ks
                 :
                 ^
                 source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                   
                  ^
                  source.ks meta.function.return-type.ks
                   string
                   ^^^^^^
                   source.ks meta.function.return-type.ks support.type.primitive.ks
                          
                         ^
                         source.ks
                          {
                          ^
                          source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        return `I'm drawing a \(this._color) rectangle.`
         
 ^^^^^^^^
 source.ks
         return
         ^^^^^^
         source.ks keyword.control.flow.return.ks
                
               ^
               source.ks
                `
                ^
                source.ks punctuation.definition.string.template.begin.ks
                 I'm drawing a 
                 ^^^^^^^^^^^^^^
                 source.ks string.template.ks
                               \(
                               ^^
                               source.ks punctuation.definition.template-expression.begin.ks
                                 this
                                 ^^^^
                                 source.ks variable.language.this.ks
                                     .
                                     ^
                                     source.ks punctuation.accessor.object.ks
                                      _color
                                      ^^^^^^
                                      source.ks variable.other.property.object.ks
                                            )
                                            ^
                                            source.ks punctuation.definition.template-expression.end.ks
                                              rectangle.
                                             ^^^^^^^^^^^
                                             source.ks string.template.ks
                                                        `
                                                        ^
                                                        source.ks punctuation.definition.string.template.end.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.implement.end.bracket.curly.ks