original file
-----------------------------------
import 'module1' for {
    foo
}

import 'module2' for {
    foo => bar
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>import 'module1' for {
 import
 ^^^^^^
 source.ks keyword.control.import.ks
        
       ^
       source.ks
        '
        ^
        source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
         module1
         ^^^^^^^
         source.ks string.quoted.single.ks
                '
                ^
                source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                  
                 ^
                 source.ks
                  for
                  ^^^
                  source.ks keyword.control.dependency.for.ks
                      
                     ^
                     source.ks
                      {
                      ^
                      source.ks punctuation.definition.import-specification.begin.bracket.curly.ks
>
>    foo
     
 ^^^^
 source.ks
     foo
     ^^^
     source.ks variable.other.constant.ks
>
>}
 }
 ^
 source.ks punctuation.definition.import-specification.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>import 'module2' for {
 import
 ^^^^^^
 source.ks keyword.control.import.ks
        
       ^
       source.ks
        '
        ^
        source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
         module2
         ^^^^^^^
         source.ks string.quoted.single.ks
                '
                ^
                source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                  
                 ^
                 source.ks
                  for
                  ^^^
                  source.ks keyword.control.dependency.for.ks
                      
                     ^
                     source.ks
                      {
                      ^
                      source.ks punctuation.definition.import-specification.begin.bracket.curly.ks
>
>    foo => bar
     
 ^^^^
 source.ks
     foo
     ^^^
     source.ks variable.other.constant.ks
         
        ^
        source.ks
         =>
         ^^
         source.ks keyword.control.dependency.arrow.ks
            
           ^
           source.ks
            bar
            ^^^
            source.ks variable.other.constant.ks
>
>}
 }
 ^
 source.ks punctuation.definition.import-specification.end.bracket.curly.ks