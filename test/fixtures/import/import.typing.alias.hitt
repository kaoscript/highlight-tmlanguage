original file
-----------------------------------
import 'chevrotain' {
    func createToken    => createChevrotainToken
    sealed class Lexer    => ChevrotainLexer
    sealed class Parser    => ChevrotainParser
    sealed class Token    => ChevrotainToken
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>import 'chevrotain' {
 import
 ^^^^^^
 source.ks keyword.control.import.ks
        
       ^
       source.ks
        '
        ^
        source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
         chevrotain
         ^^^^^^^^^^
         source.ks string.quoted.single.ks
                   '
                   ^
                   source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                     
                    ^
                    source.ks
                     {
                     ^
                     source.ks punctuation.definition.import-specification.begin.bracket.curly.ks
>
>    func createToken    => createChevrotainToken
     
 ^^^^
 source.ks
     func
     ^^^^
     source.ks storage.type.function.ks
          
         ^
         source.ks
          createToken
          ^^^^^^^^^^^
          source.ks entity.name.function.ks
                         
                     ^^^^
                     source.ks
                         =>
                         ^^
                         source.ks keyword.control.dependency.arrow.ks
                            
                           ^
                           source.ks
                            createChevrotainToken
                            ^^^^^^^^^^^^^^^^^^^^^
                            source.ks variable.other.constant.ks
>
>    sealed class Lexer    => ChevrotainLexer
     
 ^^^^
 source.ks
     sealed
     ^^^^^^
     source.ks storage.modifier.sealed.ks
            
           ^
           source.ks
            class
            ^^^^^
            source.ks storage.type.class.ks
                  
                 ^
                 source.ks
                  Lexer
                  ^^^^^
                  source.ks entity.name.type.class.ks
                           
                       ^^^^
                       source.ks
                           =>
                           ^^
                           source.ks keyword.control.dependency.arrow.ks
                              
                             ^
                             source.ks
                              ChevrotainLexer
                              ^^^^^^^^^^^^^^^
                              source.ks variable.other.constant.ks
>
>    sealed class Parser    => ChevrotainParser
     
 ^^^^
 source.ks
     sealed
     ^^^^^^
     source.ks storage.modifier.sealed.ks
            
           ^
           source.ks
            class
            ^^^^^
            source.ks storage.type.class.ks
                  
                 ^
                 source.ks
                  Parser
                  ^^^^^^
                  source.ks entity.name.type.class.ks
                            
                        ^^^^
                        source.ks
                            =>
                            ^^
                            source.ks keyword.control.dependency.arrow.ks
                               
                              ^
                              source.ks
                               ChevrotainParser
                               ^^^^^^^^^^^^^^^^
                               source.ks variable.other.constant.ks
>
>    sealed class Token    => ChevrotainToken
     
 ^^^^
 source.ks
     sealed
     ^^^^^^
     source.ks storage.modifier.sealed.ks
            
           ^
           source.ks
            class
            ^^^^^
            source.ks storage.type.class.ks
                  
                 ^
                 source.ks
                  Token
                  ^^^^^
                  source.ks entity.name.type.class.ks
                           
                       ^^^^
                       source.ks
                           =>
                           ^^
                           source.ks keyword.control.dependency.arrow.ks
                              
                             ^
                             source.ks
                              ChevrotainToken
                              ^^^^^^^^^^^^^^^
                              source.ks variable.other.constant.ks
>
>}
 }
 ^
 source.ks punctuation.definition.import-specification.end.bracket.curly.ks