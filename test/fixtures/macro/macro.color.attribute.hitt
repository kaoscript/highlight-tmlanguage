original file
-----------------------------------
export class Color {
    macro registerSpace(@expression: Object) {
        if ?expression.components {
            var fields: Array = []
            var methods: Array = []

            var dyn field
            for component, name of expression.components {
                field = `_\(name)`

                fields.push(macro private #w(field): #w(component.type))

                methods.push(macro {
                    #[error(off)]
                    #w(name)() => this.getField(#(name))
                    #[error(off)]
                    #w(name)(value) => this.setField(#(name), value)
                })

                expression.components[name].field = field
            }

            macro {
                Color.registerSpace(#(expression))

                impl Color {
                    #s(fields)
                    #s(methods)
                }
            }
        }
        else {
            macro Color.registerSpace(#(expression))
        }
    }

    getField(name) ~ Error {
        throw new Error('Not Implemented')
    }

    setField(name, value) ~ Error {
        throw new Error('Not Implemented')
    }
}

Color.registerSpace!({
    name: 'srgb'
    alias: ['rgb']
    components: {
        red: {
            max: 255
        }
        green: {
            max: 255
        }
        blue: {
            max: 255
        }
    }
})
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>export class Color {
 export
 ^^^^^^
 source.ks keyword.control.export.ks
        
       ^
       source.ks
        class
        ^^^^^
        source.ks storage.type.class.ks
              
             ^
             source.ks
              Color
              ^^^^^
              source.ks entity.name.type.class.ks
                    
                   ^
                   source.ks
                    {
                    ^
                    source.ks punctuation.definition.class.begin.bracket.curly.ks
>
>    macro registerSpace(@expression: Object) {
     
 ^^^^
 source.ks
     macro
     ^^^^^
     source.ks meta.macro.ks storage.type.macro.ks
           
          ^
          source.ks meta.macro.ks
           registerSpace
           ^^^^^^^^^^^^^
           source.ks meta.macro.ks entity.name.type.macro.ks
                        (
                        ^
                        source.ks meta.macro.ks punctuation.definition.parameters.begin.bracket.round.ks
                         @
                         ^
                         source.ks meta.macro.ks storage.modifier.at.ks
                          expression
                          ^^^^^^^^^^
                          source.ks meta.macro.ks variable.parameter.ks
                                    :
                                    ^
                                    source.ks meta.macro.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                                      
                                     ^
                                     source.ks meta.macro.ks meta.type.annotation.ks
                                      Object
                                      ^^^^^^
                                      source.ks meta.macro.ks meta.type.annotation.ks support.type.primitive.ks
                                            )
                                            ^
                                            source.ks meta.macro.ks punctuation.definition.parameters.end.bracket.round.ks
                                              
                                             ^
                                             source.ks meta.macro.ks
                                              {
                                              ^
                                              source.ks meta.macro.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        if ?expression.components {
         
 ^^^^^^^^
 source.ks meta.macro.ks
         if
         ^^
         source.ks meta.macro.ks keyword.control.conditional.if.ks
            
           ^
           source.ks meta.macro.ks
            ?
            ^
            source.ks meta.macro.ks keyword.operator.existential.ks
             expression
             ^^^^^^^^^^
             source.ks meta.macro.ks variable.other.object.ks
                       .
                       ^
                       source.ks meta.macro.ks punctuation.accessor.object.ks
                        components
                        ^^^^^^^^^^
                        source.ks meta.macro.ks variable.other.property.object.ks
                                   
                                  ^
                                  source.ks meta.macro.ks
                                   {
                                   ^
                                   source.ks meta.macro.ks punctuation.definition.block.begin.bracket.curly.ks
>
>            var fields: Array = []
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             var
             ^^^
             source.ks meta.macro.ks storage.type.constant.ks
                 
                ^
                source.ks meta.macro.ks
                 fields
                 ^^^^^^
                 source.ks meta.macro.ks meta.definition.variable.ks variable.other.ks
                       :
                       ^
                       source.ks meta.macro.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                         
                        ^
                        source.ks meta.macro.ks meta.type.annotation.ks
                         Array
                         ^^^^^
                         source.ks meta.macro.ks meta.type.annotation.ks support.type.primitive.ks
                               
                              ^
                              source.ks meta.macro.ks
                               =
                               ^
                               source.ks meta.macro.ks keyword.operator.assignment.ks
                                 
                                ^
                                source.ks meta.macro.ks
                                 [
                                 ^
                                 source.ks meta.macro.ks punctuation.definition.array.begin.bracket.square.ks
                                  ]
                                  ^
                                  source.ks meta.macro.ks punctuation.definition.array.end.bracket.square.ks
>
>            var methods: Array = []
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             var
             ^^^
             source.ks meta.macro.ks storage.type.constant.ks
                 
                ^
                source.ks meta.macro.ks
                 methods
                 ^^^^^^^
                 source.ks meta.macro.ks meta.definition.variable.ks variable.other.ks
                        :
                        ^
                        source.ks meta.macro.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                          
                         ^
                         source.ks meta.macro.ks meta.type.annotation.ks
                          Array
                          ^^^^^
                          source.ks meta.macro.ks meta.type.annotation.ks support.type.primitive.ks
                                
                               ^
                               source.ks meta.macro.ks
                                =
                                ^
                                source.ks meta.macro.ks keyword.operator.assignment.ks
                                  
                                 ^
                                 source.ks meta.macro.ks
                                  [
                                  ^
                                  source.ks meta.macro.ks punctuation.definition.array.begin.bracket.square.ks
                                   ]
                                   ^
                                   source.ks meta.macro.ks punctuation.definition.array.end.bracket.square.ks
>
>
 
 ^
 source.ks meta.macro.ks
>
>            var dyn field
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             var 
             ^^^^
             source.ks meta.macro.ks storage.type.readwrite.ks
                 dyn
                 ^^^
                 source.ks meta.macro.ks storage.type.readwrite.ks storage.modifier.dynamic.ks
                     
                    ^
                    source.ks meta.macro.ks
                     field
                     ^^^^^
                     source.ks meta.macro.ks meta.definition.variable.ks variable.other.ks
>
>            for component, name of expression.components {
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             for
             ^^^
             source.ks meta.macro.ks keyword.control.loop.for.ks
                 
                ^
                source.ks meta.macro.ks
                 component
                 ^^^^^^^^^
                 source.ks meta.macro.ks variable.other.ks
                          ,
                          ^
                          source.ks meta.macro.ks punctuation.separator.comma.ks
                            
                           ^
                           source.ks meta.macro.ks
                            name
                            ^^^^
                            source.ks meta.macro.ks variable.other.ks
                                 
                                ^
                                source.ks meta.macro.ks
                                 of
                                 ^^
                                 source.ks meta.macro.ks keyword.operator.loop.of.ks
                                    
                                   ^
                                   source.ks meta.macro.ks
                                    expression
                                    ^^^^^^^^^^
                                    source.ks meta.macro.ks variable.other.object.ks
                                              .
                                              ^
                                              source.ks meta.macro.ks punctuation.accessor.object.ks
                                               components
                                               ^^^^^^^^^^
                                               source.ks meta.macro.ks variable.other.property.object.ks
                                                          
                                                         ^
                                                         source.ks meta.macro.ks
                                                          {
                                                          ^
                                                          source.ks meta.macro.ks punctuation.definition.block.begin.bracket.curly.ks
>
>                field = `_\(name)`
                 
 ^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                 field
                 ^^^^^
                 source.ks meta.macro.ks variable.other.ks
                       
                      ^
                      source.ks meta.macro.ks
                       =
                       ^
                       source.ks meta.macro.ks keyword.operator.assignment.ks
                         
                        ^
                        source.ks meta.macro.ks
                         `
                         ^
                         source.ks meta.macro.ks punctuation.definition.string.template.begin.ks
                          _
                          ^
                          source.ks meta.macro.ks string.template.ks
                           \(
                           ^^
                           source.ks meta.macro.ks punctuation.definition.template-expression.begin.ks
                             name
                             ^^^^
                             source.ks meta.macro.ks variable.other.ks
                                 )
                                 ^
                                 source.ks meta.macro.ks punctuation.definition.template-expression.end.ks
                                  `
                                  ^
                                  source.ks meta.macro.ks punctuation.definition.string.template.end.ks
>
>
 
 ^
 source.ks meta.macro.ks
>
>                fields.push(macro private #w(field): #w(component.type))
                 
 ^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                 fields
                 ^^^^^^
                 source.ks meta.macro.ks variable.other.object.ks
                       .
                       ^
                       source.ks meta.macro.ks punctuation.accessor.object.ks
                        push
                        ^^^^
                        source.ks meta.macro.ks entity.name.function.ks
                            (
                            ^
                            source.ks meta.macro.ks punctuation.definition.arguments.begin.bracket.round.ks
                             macro
                             ^^^^^
                             source.ks meta.macro.ks keyword.control.macro.ks
                                   
                                  ^
                                  source.ks meta.macro.ks
                                   private 
                                   ^^^^^^^^
                                   source.ks meta.macro.ks
                                           #
                                           ^
                                           source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                                            w
                                            ^
                                            source.ks meta.macro.ks meta.macro.variable.ks storage.modifier.macro.ks
                                             (
                                             ^
                                             source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                                              field
                                              ^^^^^
                                              source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                                                   )
                                                   ^
                                                   source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                                                    : 
                                                    ^^
                                                    source.ks meta.macro.ks
                                                      #
                                                      ^
                                                      source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                                                       w
                                                       ^
                                                       source.ks meta.macro.ks meta.macro.variable.ks storage.modifier.macro.ks
                                                        (
                                                        ^
                                                        source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                                                         component
                                                         ^^^^^^^^^
                                                         source.ks meta.macro.ks meta.macro.variable.ks variable.other.object.ks
                                                                  .
                                                                  ^
                                                                  source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.object.ks
                                                                   type
                                                                   ^^^^
                                                                   source.ks meta.macro.ks meta.macro.variable.ks variable.other.property.object.ks
                                                                       )
                                                                       ^
                                                                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                                                                        )
                                                                        ^
                                                                        source.ks meta.macro.ks punctuation.definition.arguments.end.bracket.round.ks
>
>
 
 ^
 source.ks meta.macro.ks
>
>                methods.push(macro {
                 
 ^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                 methods
                 ^^^^^^^
                 source.ks meta.macro.ks variable.other.object.ks
                        .
                        ^
                        source.ks meta.macro.ks punctuation.accessor.object.ks
                         push
                         ^^^^
                         source.ks meta.macro.ks entity.name.function.ks
                             (
                             ^
                             source.ks meta.macro.ks punctuation.definition.arguments.begin.bracket.round.ks
                              macro
                              ^^^^^
                              source.ks meta.macro.ks keyword.control.macro.ks
                                    
                                   ^
                                   source.ks meta.macro.ks
                                    {
                                    ^
                                    source.ks meta.macro.ks punctuation.definition.macro-expression.begin.bracket.curly.ks
>
>                    #[error(off)]
                     #[error
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                            (
                            ^
                            source.ks meta.macro.ks punctuation.bracket.round.ks
                             off
                             ^^^
                             source.ks meta.macro.ks
                                )
                                ^
                                source.ks meta.macro.ks punctuation.bracket.round.ks
                                 ]
                                 ^^
                                 source.ks meta.macro.ks
>
>                    #w(name)() => this.getField(#(name))
                     
 ^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                     #
                     ^
                     source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                      w
                      ^
                      source.ks meta.macro.ks meta.macro.variable.ks storage.modifier.macro.ks
                       (
                       ^
                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                        name
                        ^^^^
                        source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                            )
                            ^
                            source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                             (
                             ^
                             source.ks meta.macro.ks punctuation.bracket.round.ks
                              )
                              ^
                              source.ks meta.macro.ks punctuation.bracket.round.ks
                                => this.getField
                               ^^^^^^^^^^^^^^^^^
                               source.ks meta.macro.ks
                                                (
                                                ^
                                                source.ks meta.macro.ks punctuation.bracket.round.ks
                                                 #
                                                 ^
                                                 source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                                                  (
                                                  ^
                                                  source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                                                   name
                                                   ^^^^
                                                   source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                                                       )
                                                       ^
                                                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                                                        )
                                                        ^
                                                        source.ks meta.macro.ks punctuation.bracket.round.ks
>
>                    #[error(off)]
                     #[error
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                            (
                            ^
                            source.ks meta.macro.ks punctuation.bracket.round.ks
                             off
                             ^^^
                             source.ks meta.macro.ks
                                )
                                ^
                                source.ks meta.macro.ks punctuation.bracket.round.ks
                                 ]
                                 ^^
                                 source.ks meta.macro.ks
>
>                    #w(name)(value) => this.setField(#(name), value)
                     
 ^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                     #
                     ^
                     source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                      w
                      ^
                      source.ks meta.macro.ks meta.macro.variable.ks storage.modifier.macro.ks
                       (
                       ^
                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                        name
                        ^^^^
                        source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                            )
                            ^
                            source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                             (
                             ^
                             source.ks meta.macro.ks punctuation.bracket.round.ks
                              value
                              ^^^^^
                              source.ks meta.macro.ks
                                   )
                                   ^
                                   source.ks meta.macro.ks punctuation.bracket.round.ks
                                     => this.setField
                                    ^^^^^^^^^^^^^^^^^
                                    source.ks meta.macro.ks
                                                     (
                                                     ^
                                                     source.ks meta.macro.ks punctuation.bracket.round.ks
                                                      #
                                                      ^
                                                      source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                                                       (
                                                       ^
                                                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                                                        name
                                                        ^^^^
                                                        source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                                                            )
                                                            ^
                                                            source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                                                             , value
                                                             ^^^^^^^
                                                             source.ks meta.macro.ks
                                                                    )
                                                                    ^
                                                                    source.ks meta.macro.ks punctuation.bracket.round.ks
>
>                })
                 
 ^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                 }
                 ^
                 source.ks meta.macro.ks punctuation.definition.macro-expression.end.bracket.curly.ks
                  )
                  ^
                  source.ks meta.macro.ks punctuation.definition.arguments.end.bracket.round.ks
>
>
 
 ^
 source.ks meta.macro.ks
>
>                expression.components[name].field = field
                 
 ^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                 expression
                 ^^^^^^^^^^
                 source.ks meta.macro.ks variable.other.object.ks
                           .
                           ^
                           source.ks meta.macro.ks punctuation.accessor.object.ks
                            components
                            ^^^^^^^^^^
                            source.ks meta.macro.ks variable.other.property.object.ks
                                      [
                                      ^
                                      source.ks meta.macro.ks punctuation.accessor.array.begin.bracket.square.ks
                                       name
                                       ^^^^
                                       source.ks meta.macro.ks variable.other.ks
                                           ]
                                           ^
                                           source.ks meta.macro.ks punctuation.accessor.array.end.bracket.square.ks
                                            .
                                            ^
                                            source.ks meta.macro.ks punctuation.accessor.object.ks
                                             field
                                             ^^^^^
                                             source.ks meta.macro.ks variable.other.property.object.ks
                                                   
                                                  ^
                                                  source.ks meta.macro.ks
                                                   =
                                                   ^
                                                   source.ks meta.macro.ks keyword.operator.assignment.ks
                                                     
                                                    ^
                                                    source.ks meta.macro.ks
                                                     field
                                                     ^^^^^
                                                     source.ks meta.macro.ks variable.other.ks
>
>            }
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             }
             ^
             source.ks meta.macro.ks punctuation.definition.block.end.bracket.curly.ks
>
>
 
 ^
 source.ks meta.macro.ks
>
>            macro {
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             macro
             ^^^^^
             source.ks meta.macro.ks keyword.control.macro.ks
                   
                  ^
                  source.ks meta.macro.ks
                   {
                   ^
                   source.ks meta.macro.ks punctuation.definition.macro-expression.begin.bracket.curly.ks
>
>                Color.registerSpace(#(expression))
                 Color.registerSpace
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                                    (
                                    ^
                                    source.ks meta.macro.ks punctuation.bracket.round.ks
                                     #
                                     ^
                                     source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                                      (
                                      ^
                                      source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                                       expression
                                       ^^^^^^^^^^
                                       source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                                                 )
                                                 ^
                                                 source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                                                  )
                                                  ^
                                                  source.ks meta.macro.ks punctuation.bracket.round.ks
>
>
 
 ^
 source.ks meta.macro.ks
>
>                impl Color {
                 impl Color 
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                            {
                            ^
                            source.ks meta.macro.ks punctuation.bracket.curly.ks
>
>                    #s(fields)
                     
 ^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                     #
                     ^
                     source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                      s
                      ^
                      source.ks meta.macro.ks meta.macro.variable.ks storage.modifier.macro.ks
                       (
                       ^
                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                        fields
                        ^^^^^^
                        source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                              )
                              ^
                              source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
>
>                    #s(methods)
                     
 ^^^^^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                     #
                     ^
                     source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                      s
                      ^
                      source.ks meta.macro.ks meta.macro.variable.ks storage.modifier.macro.ks
                       (
                       ^
                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                        methods
                        ^^^^^^^
                        source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                               )
                               ^
                               source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
>
>                }
                 
 ^^^^^^^^^^^^^^^^
 source.ks meta.macro.ks
                 }
                 ^
                 source.ks meta.macro.ks punctuation.bracket.curly.ks
>
>            }
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             }
             ^
             source.ks meta.macro.ks punctuation.definition.macro-expression.end.bracket.curly.ks
>
>        }
         
 ^^^^^^^^
 source.ks meta.macro.ks
         }
         ^
         source.ks meta.macro.ks punctuation.definition.block.end.bracket.curly.ks
>
>        else {
         
 ^^^^^^^^
 source.ks meta.macro.ks
         else
         ^^^^
         source.ks meta.macro.ks keyword.control.conditional.else.ks
              
             ^
             source.ks meta.macro.ks
              {
              ^
              source.ks meta.macro.ks punctuation.definition.block.begin.bracket.curly.ks
>
>            macro Color.registerSpace(#(expression))
             
 ^^^^^^^^^^^^
 source.ks meta.macro.ks
             macro
             ^^^^^
             source.ks meta.macro.ks keyword.control.macro.ks
                   
                  ^
                  source.ks meta.macro.ks
                   Color.registerSpace
                   ^^^^^^^^^^^^^^^^^^^
                   source.ks meta.macro.ks
                                      (
                                      ^
                                      source.ks meta.macro.ks punctuation.bracket.round.ks
                                       #
                                       ^
                                       source.ks meta.macro.ks meta.macro.variable.ks punctuation.accessor.macro.ks
                                        (
                                        ^
                                        source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.begin.bracket.round.ks
                                         expression
                                         ^^^^^^^^^^
                                         source.ks meta.macro.ks meta.macro.variable.ks variable.other.ks
                                                   )
                                                   ^
                                                   source.ks meta.macro.ks meta.macro.variable.ks punctuation.definition.macro-variable.end.bracket.round.ks
                                                    )
                                                    ^
                                                    source.ks meta.macro.ks punctuation.bracket.round.ks
>
>        }
         
 ^^^^^^^^
 source.ks meta.macro.ks
         }
         ^
         source.ks meta.macro.ks punctuation.definition.block.end.bracket.curly.ks
>
>    }
     
 ^^^^
 source.ks meta.macro.ks
     }
     ^
     source.ks meta.macro.ks punctuation.definition.block.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>    getField(name) ~ Error {
     
 ^^^^
 source.ks
     getField
     ^^^^^^^^
     source.ks entity.name.function.ks
             (
             ^
             source.ks punctuation.definition.parameters.begin.bracket.round.ks
              name
              ^^^^
              source.ks variable.parameter.ks
                  )
                  ^
                  source.ks punctuation.definition.parameters.end.bracket.round.ks
                    
                   ^
                   source.ks
                    ~
                    ^
                    source.ks meta.throwables.ks storage.modifier.throwables.ks
                      
                     ^
                     source.ks meta.throwables.ks
                      Error
                      ^^^^^
                      source.ks meta.throwables.ks support.type.primitive.ks
                            
                           ^
                           source.ks
                            {
                            ^
                            source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        throw new Error('Not Implemented')
         
 ^^^^^^^^
 source.ks
         throw
         ^^^^^
         source.ks keyword.control.try-catch.throw.ks
               
              ^
              source.ks
               new
               ^^^
               source.ks keyword.operator.new.ks
                   
                  ^
                  source.ks
                   Error
                   ^^^^^
                   source.ks entity.name.type.ks
                        (
                        ^
                        source.ks punctuation.definition.arguments.begin.bracket.round.ks
                         '
                         ^
                         source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                          Not Implemented
                          ^^^^^^^^^^^^^^^
                          source.ks string.quoted.single.ks
                                         '
                                         ^
                                         source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                          )
                                          ^
                                          source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>    setField(name, value) ~ Error {
     
 ^^^^
 source.ks
     setField
     ^^^^^^^^
     source.ks entity.name.function.ks
             (
             ^
             source.ks punctuation.definition.parameters.begin.bracket.round.ks
              name
              ^^^^
              source.ks variable.parameter.ks
                  ,
                  ^
                  source.ks punctuation.separator.comma.ks
                    
                   ^
                   source.ks
                    value
                    ^^^^^
                    source.ks variable.parameter.ks
                         )
                         ^
                         source.ks punctuation.definition.parameters.end.bracket.round.ks
                           
                          ^
                          source.ks
                           ~
                           ^
                           source.ks meta.throwables.ks storage.modifier.throwables.ks
                             
                            ^
                            source.ks meta.throwables.ks
                             Error
                             ^^^^^
                             source.ks meta.throwables.ks support.type.primitive.ks
                                   
                                  ^
                                  source.ks
                                   {
                                   ^
                                   source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        throw new Error('Not Implemented')
         
 ^^^^^^^^
 source.ks
         throw
         ^^^^^
         source.ks keyword.control.try-catch.throw.ks
               
              ^
              source.ks
               new
               ^^^
               source.ks keyword.operator.new.ks
                   
                  ^
                  source.ks
                   Error
                   ^^^^^
                   source.ks entity.name.type.ks
                        (
                        ^
                        source.ks punctuation.definition.arguments.begin.bracket.round.ks
                         '
                         ^
                         source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                          Not Implemented
                          ^^^^^^^^^^^^^^^
                          source.ks string.quoted.single.ks
                                         '
                                         ^
                                         source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                                          )
                                          ^
                                          source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.class.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>Color.registerSpace!({
 Color
 ^^^^^
 source.ks variable.other.object.ks
      .
      ^
      source.ks punctuation.accessor.object.ks
       registerSpace
       ^^^^^^^^^^^^^
       source.ks entity.name.function.ks
                    !
                    ^
                    source.ks keyword.operator.function.macro.ks
                     (
                     ^
                     source.ks punctuation.definition.arguments.begin.bracket.round.ks
                      {
                      ^
                      source.ks punctuation.definition.object.begin.bracket.curly.ks
>
>    name: 'srgb'
     
 ^^^^
 source.ks
     name
     ^^^^
     source.ks meta.object.key.ks
         :
         ^
         source.ks punctuation.separator.key-value.ks
           
          ^
          source.ks
           '
           ^
           source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
            srgb
            ^^^^
            source.ks string.quoted.single.ks
                '
                ^
                source.ks string.quoted.single.ks punctuation.definition.string.end.ks
>
>    alias: ['rgb']
     
 ^^^^
 source.ks
     alias
     ^^^^^
     source.ks meta.object.key.ks
          :
          ^
          source.ks punctuation.separator.key-value.ks
            
           ^
           source.ks
            [
            ^
            source.ks punctuation.definition.array.begin.bracket.square.ks
             '
             ^
             source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
              rgb
              ^^^
              source.ks string.quoted.single.ks
                 '
                 ^
                 source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                  ]
                  ^
                  source.ks punctuation.definition.array.end.bracket.square.ks
>
>    components: {
     
 ^^^^
 source.ks
     components
     ^^^^^^^^^^
     source.ks meta.object.key.ks
               :
               ^
               source.ks punctuation.separator.key-value.ks
                 
                ^
                source.ks
                 {
                 ^
                 source.ks punctuation.definition.object.begin.bracket.curly.ks
>
>        red: {
         
 ^^^^^^^^
 source.ks
         red
         ^^^
         source.ks meta.object.key.ks
            :
            ^
            source.ks punctuation.separator.key-value.ks
              
             ^
             source.ks
              {
              ^
              source.ks punctuation.definition.object.begin.bracket.curly.ks
>
>            max: 255
             
 ^^^^^^^^^^^^
 source.ks
             max
             ^^^
             source.ks meta.object.key.ks
                :
                ^
                source.ks punctuation.separator.key-value.ks
                  
                 ^
                 source.ks
                  255
                  ^^^
                  source.ks constant.numeric.decimal.ks
>
>        }
         
 ^^^^^^^^
 source.ks
         }
         ^
         source.ks punctuation.definition.object.end.bracket.curly.ks
>
>        green: {
         
 ^^^^^^^^
 source.ks
         green
         ^^^^^
         source.ks meta.object.key.ks
              :
              ^
              source.ks punctuation.separator.key-value.ks
                
               ^
               source.ks
                {
                ^
                source.ks punctuation.definition.object.begin.bracket.curly.ks
>
>            max: 255
             
 ^^^^^^^^^^^^
 source.ks
             max
             ^^^
             source.ks meta.object.key.ks
                :
                ^
                source.ks punctuation.separator.key-value.ks
                  
                 ^
                 source.ks
                  255
                  ^^^
                  source.ks constant.numeric.decimal.ks
>
>        }
         
 ^^^^^^^^
 source.ks
         }
         ^
         source.ks punctuation.definition.object.end.bracket.curly.ks
>
>        blue: {
         
 ^^^^^^^^
 source.ks
         blue
         ^^^^
         source.ks meta.object.key.ks
             :
             ^
             source.ks punctuation.separator.key-value.ks
               
              ^
              source.ks
               {
               ^
               source.ks punctuation.definition.object.begin.bracket.curly.ks
>
>            max: 255
             
 ^^^^^^^^^^^^
 source.ks
             max
             ^^^
             source.ks meta.object.key.ks
                :
                ^
                source.ks punctuation.separator.key-value.ks
                  
                 ^
                 source.ks
                  255
                  ^^^
                  source.ks constant.numeric.decimal.ks
>
>        }
         
 ^^^^^^^^
 source.ks
         }
         ^
         source.ks punctuation.definition.object.end.bracket.curly.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.object.end.bracket.curly.ks
>
>})
 }
 ^
 source.ks punctuation.definition.object.end.bracket.curly.ks
  )
  ^
  source.ks punctuation.definition.arguments.end.bracket.round.ks