original file
-----------------------------------
var dyn somePoint = [1, 1]

match somePoint {
    with [x, y] when x == 0 && y == 0                    => console.log("(0, 0) is at the origin")
    with [x, y] when y == 0                                => console.log("(\(x), 0) is on the x-axis")
    with [x, y] when x == 0                                => console.log("(0, \(y)) is on the y-axis")
    with [x, y] when -2 <= x <= 2 && -2 <= y <= 2        => console.log("(\(x), \(y)) is inside the box")
    with [x, y]                                            => console.log("(\(x), \(y)) is outside of the box")
    else                                                => console.log("Not a point")
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>var dyn somePoint = [1, 1]
 var 
 ^^^^
 source.ks storage.type.readwrite.ks
     dyn
     ^^^
     source.ks storage.type.readwrite.ks storage.modifier.dynamic.ks
         
        ^
        source.ks
         somePoint
         ^^^^^^^^^
         source.ks meta.definition.variable.ks variable.other.ks
                   
                  ^
                  source.ks
                   =
                   ^
                   source.ks keyword.operator.assignment.ks
                     
                    ^
                    source.ks
                     [
                     ^
                     source.ks punctuation.definition.array.begin.bracket.square.ks
                      1
                      ^
                      source.ks constant.numeric.decimal.ks
                       ,
                       ^
                       source.ks punctuation.separator.comma.ks
                         
                        ^
                        source.ks
                         1
                         ^
                         source.ks constant.numeric.decimal.ks
                          ]
                          ^
                          source.ks punctuation.definition.array.end.bracket.square.ks
>
>
 
 ^
 source.ks
>
>match somePoint {
 match
 ^^^^^
 source.ks keyword.control.match.ks
       
      ^
      source.ks
       somePoint
       ^^^^^^^^^
       source.ks variable.other.ks
                 
                ^
                source.ks
                 {
                 ^
                 source.ks punctuation.definition.match.begin.bracket.curly.ks
>
>    with [x, y] when x == 0 && y == 0                    => console.log("(0, 0) is at the origin")
     
 ^^^^
 source.ks
     with
     ^^^^
     source.ks keyword.control.match.binding.ks
          
         ^
         source.ks
          [
          ^
          source.ks punctuation.definition.binding-pattern.array.begin.bracket.square.ks
           x
           ^
           source.ks variable.other.ks
            ,
            ^
            source.ks punctuation.separator.comma.ks
              
             ^
             source.ks
              y
              ^
              source.ks variable.other.ks
               ]
               ^
               source.ks punctuation.definition.binding-pattern.array.end.bracket.square.ks
                 
                ^
                source.ks
                 when
                 ^^^^
                 source.ks keyword.control.match.binding-condition.ks
                      
                     ^
                     source.ks
                      x
                      ^
                      source.ks variable.other.ks
                        
                       ^
                       source.ks
                        ==
                        ^^
                        source.ks keyword.operator.comparison.ks
                           
                          ^
                          source.ks
                           0
                           ^
                           source.ks constant.numeric.decimal.ks
                             
                            ^
                            source.ks
                             &&
                             ^^
                             source.ks keyword.operator.logical.ks
                                
                               ^
                               source.ks
                                y
                                ^
                                source.ks variable.other.ks
                                  
                                 ^
                                 source.ks
                                  ==
                                  ^^
                                  source.ks keyword.operator.comparison.ks
                                     
                                    ^
                                    source.ks
                                     0
                                     ^
                                     source.ks constant.numeric.decimal.ks
                                                          
                                      ^^^^^^^^^^^^^^^^^^^^
                                      source.ks
                                                          =>
                                                          ^^
                                                          source.ks keyword.control.match.arrow.ks
                                                             
                                                            ^
                                                            source.ks
                                                             console
                                                             ^^^^^^^
                                                             source.ks variable.other.object.ks
                                                                    .
                                                                    ^
                                                                    source.ks punctuation.accessor.object.ks
                                                                     log
                                                                     ^^^
                                                                     source.ks entity.name.function.ks
                                                                        (
                                                                        ^
                                                                        source.ks punctuation.definition.arguments.begin.bracket.round.ks
                                                                         "
                                                                         ^
                                                                         source.ks string.quoted.double.ks punctuation.definition.string.begin.ks
                                                                          (0, 0) is at the origin
                                                                          ^^^^^^^^^^^^^^^^^^^^^^^
                                                                          source.ks string.quoted.double.ks
                                                                                                 "
                                                                                                 ^
                                                                                                 source.ks string.quoted.double.ks punctuation.definition.string.end.ks
                                                                                                  )
                                                                                                  ^
                                                                                                  source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    with [x, y] when y == 0                                => console.log("(\(x), 0) is on the x-axis")
     
 ^^^^
 source.ks
     with
     ^^^^
     source.ks keyword.control.match.binding.ks
          
         ^
         source.ks
          [
          ^
          source.ks punctuation.definition.binding-pattern.array.begin.bracket.square.ks
           x
           ^
           source.ks variable.other.ks
            ,
            ^
            source.ks punctuation.separator.comma.ks
              
             ^
             source.ks
              y
              ^
              source.ks variable.other.ks
               ]
               ^
               source.ks punctuation.definition.binding-pattern.array.end.bracket.square.ks
                 
                ^
                source.ks
                 when
                 ^^^^
                 source.ks keyword.control.match.binding-condition.ks
                      
                     ^
                     source.ks
                      y
                      ^
                      source.ks variable.other.ks
                        
                       ^
                       source.ks
                        ==
                        ^^
                        source.ks keyword.operator.comparison.ks
                           
                          ^
                          source.ks
                           0
                           ^
                           source.ks constant.numeric.decimal.ks
                                                            
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            source.ks
                                                            =>
                                                            ^^
                                                            source.ks keyword.control.match.arrow.ks
                                                               
                                                              ^
                                                              source.ks
                                                               console
                                                               ^^^^^^^
                                                               source.ks variable.other.object.ks
                                                                      .
                                                                      ^
                                                                      source.ks punctuation.accessor.object.ks
                                                                       log
                                                                       ^^^
                                                                       source.ks entity.name.function.ks
                                                                          (
                                                                          ^
                                                                          source.ks punctuation.definition.arguments.begin.bracket.round.ks
                                                                           "
                                                                           ^
                                                                           source.ks string.quoted.double.ks punctuation.definition.string.begin.ks
                                                                            (
                                                                            ^
                                                                            source.ks string.quoted.double.ks
                                                                             \(
                                                                             ^^
                                                                             source.ks string.quoted.double.ks constant.character.escape.ks
                                                                               x), 0) is on the x-axis
                                                                               ^^^^^^^^^^^^^^^^^^^^^^^
                                                                               source.ks string.quoted.double.ks
                                                                                                      "
                                                                                                      ^
                                                                                                      source.ks string.quoted.double.ks punctuation.definition.string.end.ks
                                                                                                       )
                                                                                                       ^
                                                                                                       source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    with [x, y] when x == 0                                => console.log("(0, \(y)) is on the y-axis")
     
 ^^^^
 source.ks
     with
     ^^^^
     source.ks keyword.control.match.binding.ks
          
         ^
         source.ks
          [
          ^
          source.ks punctuation.definition.binding-pattern.array.begin.bracket.square.ks
           x
           ^
           source.ks variable.other.ks
            ,
            ^
            source.ks punctuation.separator.comma.ks
              
             ^
             source.ks
              y
              ^
              source.ks variable.other.ks
               ]
               ^
               source.ks punctuation.definition.binding-pattern.array.end.bracket.square.ks
                 
                ^
                source.ks
                 when
                 ^^^^
                 source.ks keyword.control.match.binding-condition.ks
                      
                     ^
                     source.ks
                      x
                      ^
                      source.ks variable.other.ks
                        
                       ^
                       source.ks
                        ==
                        ^^
                        source.ks keyword.operator.comparison.ks
                           
                          ^
                          source.ks
                           0
                           ^
                           source.ks constant.numeric.decimal.ks
                                                            
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            source.ks
                                                            =>
                                                            ^^
                                                            source.ks keyword.control.match.arrow.ks
                                                               
                                                              ^
                                                              source.ks
                                                               console
                                                               ^^^^^^^
                                                               source.ks variable.other.object.ks
                                                                      .
                                                                      ^
                                                                      source.ks punctuation.accessor.object.ks
                                                                       log
                                                                       ^^^
                                                                       source.ks entity.name.function.ks
                                                                          (
                                                                          ^
                                                                          source.ks punctuation.definition.arguments.begin.bracket.round.ks
                                                                           "
                                                                           ^
                                                                           source.ks string.quoted.double.ks punctuation.definition.string.begin.ks
                                                                            (0, 
                                                                            ^^^^
                                                                            source.ks string.quoted.double.ks
                                                                                \(
                                                                                ^^
                                                                                source.ks string.quoted.double.ks constant.character.escape.ks
                                                                                  y)) is on the y-axis
                                                                                  ^^^^^^^^^^^^^^^^^^^^
                                                                                  source.ks string.quoted.double.ks
                                                                                                      "
                                                                                                      ^
                                                                                                      source.ks string.quoted.double.ks punctuation.definition.string.end.ks
                                                                                                       )
                                                                                                       ^
                                                                                                       source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    with [x, y] when -2 <= x <= 2 && -2 <= y <= 2        => console.log("(\(x), \(y)) is inside the box")
     
 ^^^^
 source.ks
     with
     ^^^^
     source.ks keyword.control.match.binding.ks
          
         ^
         source.ks
          [
          ^
          source.ks punctuation.definition.binding-pattern.array.begin.bracket.square.ks
           x
           ^
           source.ks variable.other.ks
            ,
            ^
            source.ks punctuation.separator.comma.ks
              
             ^
             source.ks
              y
              ^
              source.ks variable.other.ks
               ]
               ^
               source.ks punctuation.definition.binding-pattern.array.end.bracket.square.ks
                 
                ^
                source.ks
                 when
                 ^^^^
                 source.ks keyword.control.match.binding-condition.ks
                      
                     ^
                     source.ks
                      -
                      ^
                      source.ks keyword.operator.arithmetic.ks
                       2
                       ^
                       source.ks constant.numeric.decimal.ks
                         
                        ^
                        source.ks
                         <=
                         ^^
                         source.ks keyword.operator.comparison.ks
                            
                           ^
                           source.ks
                            x
                            ^
                            source.ks variable.other.ks
                              
                             ^
                             source.ks
                              <=
                              ^^
                              source.ks keyword.operator.comparison.ks
                                 
                                ^
                                source.ks
                                 2
                                 ^
                                 source.ks constant.numeric.decimal.ks
                                   
                                  ^
                                  source.ks
                                   &&
                                   ^^
                                   source.ks keyword.operator.logical.ks
                                      
                                     ^
                                     source.ks
                                      -
                                      ^
                                      source.ks keyword.operator.arithmetic.ks
                                       2
                                       ^
                                       source.ks constant.numeric.decimal.ks
                                         
                                        ^
                                        source.ks
                                         <=
                                         ^^
                                         source.ks keyword.operator.comparison.ks
                                            
                                           ^
                                           source.ks
                                            y
                                            ^
                                            source.ks variable.other.ks
                                              
                                             ^
                                             source.ks
                                              <=
                                              ^^
                                              source.ks keyword.operator.comparison.ks
                                                 
                                                ^
                                                source.ks
                                                 2
                                                 ^
                                                 source.ks constant.numeric.decimal.ks
                                                          
                                                  ^^^^^^^^
                                                  source.ks
                                                          =>
                                                          ^^
                                                          source.ks keyword.control.match.arrow.ks
                                                             
                                                            ^
                                                            source.ks
                                                             console
                                                             ^^^^^^^
                                                             source.ks variable.other.object.ks
                                                                    .
                                                                    ^
                                                                    source.ks punctuation.accessor.object.ks
                                                                     log
                                                                     ^^^
                                                                     source.ks entity.name.function.ks
                                                                        (
                                                                        ^
                                                                        source.ks punctuation.definition.arguments.begin.bracket.round.ks
                                                                         "
                                                                         ^
                                                                         source.ks string.quoted.double.ks punctuation.definition.string.begin.ks
                                                                          (
                                                                          ^
                                                                          source.ks string.quoted.double.ks
                                                                           \(
                                                                           ^^
                                                                           source.ks string.quoted.double.ks constant.character.escape.ks
                                                                             x), 
                                                                             ^^^^
                                                                             source.ks string.quoted.double.ks
                                                                                 \(
                                                                                 ^^
                                                                                 source.ks string.quoted.double.ks constant.character.escape.ks
                                                                                   y)) is inside the box
                                                                                   ^^^^^^^^^^^^^^^^^^^^^
                                                                                   source.ks string.quoted.double.ks
                                                                                                        "
                                                                                                        ^
                                                                                                        source.ks string.quoted.double.ks punctuation.definition.string.end.ks
                                                                                                         )
                                                                                                         ^
                                                                                                         source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    with [x, y]                                            => console.log("(\(x), \(y)) is outside of the box")
     
 ^^^^
 source.ks
     with
     ^^^^
     source.ks keyword.control.match.binding.ks
          
         ^
         source.ks
          [
          ^
          source.ks punctuation.definition.binding-pattern.array.begin.bracket.square.ks
           x
           ^
           source.ks variable.other.ks
            ,
            ^
            source.ks punctuation.separator.comma.ks
              
             ^
             source.ks
              y
              ^
              source.ks variable.other.ks
               ]
               ^
               source.ks punctuation.definition.binding-pattern.array.end.bracket.square.ks
                                                            
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                source.ks
                                                            =>
                                                            ^^
                                                            source.ks keyword.control.match.arrow.ks
                                                               
                                                              ^
                                                              source.ks
                                                               console
                                                               ^^^^^^^
                                                               source.ks variable.other.object.ks
                                                                      .
                                                                      ^
                                                                      source.ks punctuation.accessor.object.ks
                                                                       log
                                                                       ^^^
                                                                       source.ks entity.name.function.ks
                                                                          (
                                                                          ^
                                                                          source.ks punctuation.definition.arguments.begin.bracket.round.ks
                                                                           "
                                                                           ^
                                                                           source.ks string.quoted.double.ks punctuation.definition.string.begin.ks
                                                                            (
                                                                            ^
                                                                            source.ks string.quoted.double.ks
                                                                             \(
                                                                             ^^
                                                                             source.ks string.quoted.double.ks constant.character.escape.ks
                                                                               x), 
                                                                               ^^^^
                                                                               source.ks string.quoted.double.ks
                                                                                   \(
                                                                                   ^^
                                                                                   source.ks string.quoted.double.ks constant.character.escape.ks
                                                                                     y)) is outside of the box
                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                                     source.ks string.quoted.double.ks
                                                                                                              "
                                                                                                              ^
                                                                                                              source.ks string.quoted.double.ks punctuation.definition.string.end.ks
                                                                                                               )
                                                                                                               ^
                                                                                                               source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    else                                                => console.log("Not a point")
     
 ^^^^
 source.ks
     else
     ^^^^
     source.ks keyword.control.match.else.ks
                                                         
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.ks
                                                         =>
                                                         ^^
                                                         source.ks keyword.control.match.arrow.ks
                                                            
                                                           ^
                                                           source.ks
                                                            console
                                                            ^^^^^^^
                                                            source.ks variable.other.object.ks
                                                                   .
                                                                   ^
                                                                   source.ks punctuation.accessor.object.ks
                                                                    log
                                                                    ^^^
                                                                    source.ks entity.name.function.ks
                                                                       (
                                                                       ^
                                                                       source.ks punctuation.definition.arguments.begin.bracket.round.ks
                                                                        "
                                                                        ^
                                                                        source.ks string.quoted.double.ks punctuation.definition.string.begin.ks
                                                                         Not a point
                                                                         ^^^^^^^^^^^
                                                                         source.ks string.quoted.double.ks
                                                                                    "
                                                                                    ^
                                                                                    source.ks string.quoted.double.ks punctuation.definition.string.end.ks
                                                                                     )
                                                                                     ^
                                                                                     source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.match.end.bracket.curly.ks