original file
-----------------------------------
extern parseFloat

namespace Float {
    export {
        func toInt(value: String) { // {{{
            return parseFloat(value)
        } // }}}

        func toFloat(value: String) { // {{{
            return parseFloat(value)
        } // }}}
    }
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>extern parseFloat
 extern
 ^^^^^^
 source.ks keyword.control.dependency.extern.ks
        
       ^
       source.ks
        parseFloat
        ^^^^^^^^^^
        source.ks variable.other.constant.ks
>
>
 
 ^
 source.ks
>
>namespace Float {
 namespace
 ^^^^^^^^^
 source.ks storage.type.namespace.ks
           
          ^
          source.ks
           Float
           ^^^^^
           source.ks entity.name.type.namespace.ks
                 
                ^
                source.ks
                 {
                 ^
                 source.ks punctuation.definition.namespace.begin.bracket.curly.ks
>
>    export {
     
 ^^^^
 source.ks
     export
     ^^^^^^
     source.ks keyword.control.export.ks
            
           ^
           source.ks
            {
            ^
            source.ks punctuation.definition.export.begin.bracket.curly.ks
>
>        func toInt(value: String) { // {{{
         
 ^^^^^^^^
 source.ks
         func
         ^^^^
         source.ks storage.type.function.ks
              
             ^
             source.ks
              toInt
              ^^^^^
              source.ks entity.name.function.ks
                   (
                   ^
                   source.ks punctuation.definition.parameters.begin.bracket.round.ks
                    value
                    ^^^^^
                    source.ks variable.parameter.ks
                         :
                         ^
                         source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                           
                          ^
                          source.ks meta.type.annotation.ks
                           String
                           ^^^^^^
                           source.ks meta.type.annotation.ks support.type.primitive.ks
                                 )
                                 ^
                                 source.ks punctuation.definition.parameters.end.bracket.round.ks
                                   
                                  ^
                                  source.ks
                                   {
                                   ^
                                   source.ks punctuation.definition.block.begin.bracket.curly.ks
                                     
                                    ^
                                    source.ks
                                     //
                                     ^^
                                     source.ks comment.line.double-slash.ks punctuation.definition.comment.ks
                                        {{{
                                       ^^^^
                                       source.ks comment.line.double-slash.ks
>
>            return parseFloat(value)
             
 ^^^^^^^^^^^^
 source.ks
             return
             ^^^^^^
             source.ks keyword.control.flow.return.ks
                    
                   ^
                   source.ks
                    parseFloat
                    ^^^^^^^^^^
                    source.ks entity.name.function.ks
                              (
                              ^
                              source.ks punctuation.definition.arguments.begin.bracket.round.ks
                               value
                               ^^^^^
                               source.ks variable.other.ks
                                    )
                                    ^
                                    source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>        } // }}}
         
 ^^^^^^^^
 source.ks
         }
         ^
         source.ks punctuation.definition.block.end.bracket.curly.ks
           
          ^
          source.ks
           //
           ^^
           source.ks comment.line.double-slash.ks punctuation.definition.comment.ks
              }}}
             ^^^^
             source.ks comment.line.double-slash.ks
>
>
 
 ^
 source.ks
>
>        func toFloat(value: String) { // {{{
         
 ^^^^^^^^
 source.ks
         func
         ^^^^
         source.ks storage.type.function.ks
              
             ^
             source.ks
              toFloat
              ^^^^^^^
              source.ks entity.name.function.ks
                     (
                     ^
                     source.ks punctuation.definition.parameters.begin.bracket.round.ks
                      value
                      ^^^^^
                      source.ks variable.parameter.ks
                           :
                           ^
                           source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                             
                            ^
                            source.ks meta.type.annotation.ks
                             String
                             ^^^^^^
                             source.ks meta.type.annotation.ks support.type.primitive.ks
                                   )
                                   ^
                                   source.ks punctuation.definition.parameters.end.bracket.round.ks
                                     
                                    ^
                                    source.ks
                                     {
                                     ^
                                     source.ks punctuation.definition.block.begin.bracket.curly.ks
                                       
                                      ^
                                      source.ks
                                       //
                                       ^^
                                       source.ks comment.line.double-slash.ks punctuation.definition.comment.ks
                                          {{{
                                         ^^^^
                                         source.ks comment.line.double-slash.ks
>
>            return parseFloat(value)
             
 ^^^^^^^^^^^^
 source.ks
             return
             ^^^^^^
             source.ks keyword.control.flow.return.ks
                    
                   ^
                   source.ks
                    parseFloat
                    ^^^^^^^^^^
                    source.ks entity.name.function.ks
                              (
                              ^
                              source.ks punctuation.definition.arguments.begin.bracket.round.ks
                               value
                               ^^^^^
                               source.ks variable.other.ks
                                    )
                                    ^
                                    source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>        } // }}}
         
 ^^^^^^^^
 source.ks
         }
         ^
         source.ks punctuation.definition.block.end.bracket.curly.ks
           
          ^
          source.ks
           //
           ^^
           source.ks comment.line.double-slash.ks punctuation.definition.comment.ks
              }}}
             ^^^^
             source.ks comment.line.double-slash.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.export.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.namespace.end.bracket.curly.ks