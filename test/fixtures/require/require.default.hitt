original file
-----------------------------------
require Color: class, Space: enum
impl Color {
    private _luma: int
    
    luma(): int => @luma
    
    luma(@luma) => this
}
export Color, Space
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>require Color: class, Space: enum
 require
 ^^^^^^^
 source.ks keyword.control.require.ks
         
        ^
        source.ks
         Color
         ^^^^^
         source.ks variable.other.constant.ks
              :
              ^
              source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                
               ^
               source.ks meta.type.annotation.ks
                class
                ^^^^^
                source.ks meta.type.annotation.ks support.type.primitive.ks
                     ,
                     ^
                     source.ks punctuation.separator.comma.ks
                       
                      ^
                      source.ks
                       Space
                       ^^^^^
                       source.ks variable.other.constant.ks
                            :
                            ^
                            source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                              
                             ^
                             source.ks meta.type.annotation.ks
                              enum
                              ^^^^
                              source.ks meta.type.annotation.ks support.type.primitive.ks
>
>impl Color {
 impl
 ^^^^
 source.ks keyword.control.implement.ks
      
     ^
     source.ks
      Color
      ^^^^^
      source.ks entity.name.type.ks
            
           ^
           source.ks
            {
            ^
            source.ks punctuation.definition.implement.begin.bracket.curly.ks
>
>    private _luma: int
     
 ^^^^
 source.ks
     private
     ^^^^^^^
     source.ks storage.modifier.access.ks
             
            ^
            source.ks
             _luma
             ^^^^^
             source.ks entity.name.variable.field.ks
                  :
                  ^
                  source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                    
                   ^
                   source.ks meta.type.annotation.ks
                    int
                    ^^^
                    source.ks meta.type.annotation.ks entity.name.type.ks
>
>    
     
 ^^^^^
 source.ks
>
>    luma(): int => @luma
     
 ^^^^
 source.ks
     luma
     ^^^^
     source.ks entity.name.function.ks
         (
         ^
         source.ks punctuation.definition.parameters.begin.bracket.round.ks
          )
          ^
          source.ks punctuation.definition.parameters.end.bracket.round.ks
           :
           ^
           source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
             
            ^
            source.ks meta.function.return-type.ks
             int
             ^^^
             source.ks meta.function.return-type.ks entity.name.type.ks
                 
                ^
                source.ks
                 =>
                 ^^
                 source.ks storage.type.function.arrow.ks
                    
                   ^
                   source.ks
                    @
                    ^
                    source.ks storage.modifier.instance.ks
                     luma
                     ^^^^
                     source.ks variable.other.instance.ks
>
>    
     
 ^^^^^
 source.ks
>
>    luma(@luma) => this
     
 ^^^^
 source.ks
     luma
     ^^^^
     source.ks entity.name.function.ks
         (
         ^
         source.ks punctuation.definition.parameters.begin.bracket.round.ks
          @
          ^
          source.ks storage.modifier.at.ks
           luma
           ^^^^
           source.ks variable.parameter.ks
               )
               ^
               source.ks punctuation.definition.parameters.end.bracket.round.ks
                 
                ^
                source.ks
                 =>
                 ^^
                 source.ks storage.type.function.arrow.ks
                    
                   ^
                   source.ks
                    this
                    ^^^^
                    source.ks variable.language.this.ks
>
>}
 }
 ^
 source.ks punctuation.definition.implement.end.bracket.curly.ks
>
>export Color, Space
 export
 ^^^^^^
 source.ks keyword.control.export.ks
        
       ^
       source.ks
        Color
        ^^^^^
        source.ks variable.other.ks
             ,
             ^
             source.ks punctuation.separator.comma.ks
               
              ^
              source.ks
               Space
               ^^^^^
               source.ks variable.other.ks