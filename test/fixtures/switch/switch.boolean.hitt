original file
-----------------------------------
let boolean = true

let binary = switch boolean {
    false => 0
    true => 1
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>let boolean = true
 let
 ^^^
 source.ks storage.type.readwrite.ks
     
    ^
    source.ks
     boolean
     ^^^^^^^
     source.ks meta.definition.variable.ks variable.other.readwrite.ks
             
            ^
            source.ks
             =
             ^
             source.ks keyword.operator.assignment.ks
               
              ^
              source.ks
               true
               ^^^^
               source.ks constant.language.boolean.true.ks
>
>
 
 ^
 source.ks
>
>let binary = switch boolean {
 let
 ^^^
 source.ks storage.type.readwrite.ks
     
    ^
    source.ks
     binary
     ^^^^^^
     source.ks meta.definition.variable.ks variable.other.readwrite.ks
            
           ^
           source.ks
            =
            ^
            source.ks keyword.operator.assignment.ks
              
             ^
             source.ks
              switch
              ^^^^^^
              source.ks keyword.control.switch.ks
                     
                    ^
                    source.ks
                     boolean
                     ^^^^^^^
                     source.ks variable.other.ks
                             
                            ^
                            source.ks
                             {
                             ^
                             source.ks punctuation.definition.switch.begin.bracket.curly.ks
>
>    false => 0
     
 ^^^^
 source.ks
     false
     ^^^^^
     source.ks constant.language.boolean.false.ks
           
          ^
          source.ks
           =>
           ^^
           source.ks keyword.control.switch.body.ks
              
             ^
             source.ks
              0
              ^
              source.ks constant.numeric.decimal.ks
>
>    true => 1
     
 ^^^^
 source.ks
     true
     ^^^^
     source.ks constant.language.boolean.true.ks
          
         ^
         source.ks
          =>
          ^^
          source.ks keyword.control.switch.body.ks
             
            ^
            source.ks
             1
             ^
             source.ks constant.numeric.decimal.ks
>
>}
 }
 ^
 source.ks punctuation.definition.switch.end.bracket.curly.ks