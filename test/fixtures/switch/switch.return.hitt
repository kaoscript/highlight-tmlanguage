original file
-----------------------------------
func foo(x, y) {
    switch x {
        -1 => 0
        42 => return y
        => return x * y
    }
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>func foo(x, y) {
 func
 ^^^^
 source.ks storage.type.function.ks
      
     ^
     source.ks
      foo
      ^^^
      source.ks entity.name.function.ks
         (
         ^
         source.ks punctuation.definition.parameters.begin.bracket.round.ks
          x
          ^
          source.ks variable.parameter.ks
           ,
           ^
           source.ks punctuation.separator.comma.ks
             
            ^
            source.ks
             y
             ^
             source.ks variable.parameter.ks
              )
              ^
              source.ks punctuation.definition.parameters.end.bracket.round.ks
                
               ^
               source.ks
                {
                ^
                source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    switch x {
     
 ^^^^
 source.ks
     switch
     ^^^^^^
     source.ks keyword.control.switch.ks
            
           ^
           source.ks
            x
            ^
            source.ks variable.other.ks
              
             ^
             source.ks
              {
              ^
              source.ks punctuation.definition.switch.begin.bracket.curly.ks
>
>        -1 => 0
         
 ^^^^^^^^
 source.ks
         -
         ^
         source.ks keyword.operator.arithmetic.ks
          1
          ^
          source.ks constant.numeric.decimal.ks
            
           ^
           source.ks
            =>
            ^^
            source.ks keyword.control.switch.body.ks
               
              ^
              source.ks
               0
               ^
               source.ks constant.numeric.decimal.ks
>
>        42 => return y
         
 ^^^^^^^^
 source.ks
         42
         ^^
         source.ks constant.numeric.decimal.ks
            
           ^
           source.ks
            =>
            ^^
            source.ks keyword.control.switch.body.ks
               
              ^
              source.ks
               return
               ^^^^^^
               source.ks keyword.control.flow.return.ks
                      
                     ^
                     source.ks
                      y
                      ^
                      source.ks variable.other.ks
>
>        => return x * y
         
 ^^^^^^^^
 source.ks
         =>
         ^^
         source.ks keyword.control.switch.body.ks
            
           ^
           source.ks
            return
            ^^^^^^
            source.ks keyword.control.flow.return.ks
                   
                  ^
                  source.ks
                   x
                   ^
                   source.ks variable.other.ks
                     
                    ^
                    source.ks
                     *
                     ^
                     source.ks keyword.operator.arithmetic.ks
                       
                      ^
                      source.ks
                       y
                       ^
                       source.ks variable.other.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.switch.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks