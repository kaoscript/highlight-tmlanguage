original file
-----------------------------------
try {
    console.log('foobar')
}
on RangeError {
    console.log('RangeError')
}
catch {
    console.log('Error')
}
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>try {
 try
 ^^^
 source.ks keyword.control.try-catch.try.ks
     
    ^
    source.ks
     {
     ^
     source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    console.log('foobar')
     
 ^^^^
 source.ks
     console
     ^^^^^^^
     source.ks variable.other.object.ks
            .
            ^
            source.ks punctuation.accessor.object.ks
             log
             ^^^
             source.ks entity.name.function.ks
                (
                ^
                source.ks punctuation.definition.arguments.begin.bracket.round.ks
                 '
                 ^
                 source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                  foobar
                  ^^^^^^
                  source.ks string.quoted.single.ks
                        '
                        ^
                        source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                         )
                         ^
                         source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks
>
>on RangeError {
 on
 ^^
 source.ks keyword.control.try-catch.on.ks
    
   ^
   source.ks
    RangeError
    ^^^^^^^^^^
    source.ks entity.name.type.ks
               
              ^
              source.ks
               {
               ^
               source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    console.log('RangeError')
     
 ^^^^
 source.ks
     console
     ^^^^^^^
     source.ks variable.other.object.ks
            .
            ^
            source.ks punctuation.accessor.object.ks
             log
             ^^^
             source.ks entity.name.function.ks
                (
                ^
                source.ks punctuation.definition.arguments.begin.bracket.round.ks
                 '
                 ^
                 source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                  RangeError
                  ^^^^^^^^^^
                  source.ks string.quoted.single.ks
                            '
                            ^
                            source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                             )
                             ^
                             source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks
>
>catch {
 catch
 ^^^^^
 source.ks keyword.control.try-catch.catch.ks
       
      ^
      source.ks
       {
       ^
       source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    console.log('Error')
     
 ^^^^
 source.ks
     console
     ^^^^^^^
     source.ks variable.other.object.ks
            .
            ^
            source.ks punctuation.accessor.object.ks
             log
             ^^^
             source.ks entity.name.function.ks
                (
                ^
                source.ks punctuation.definition.arguments.begin.bracket.round.ks
                 '
                 ^
                 source.ks string.quoted.single.ks punctuation.definition.string.begin.ks
                  Error
                  ^^^^^
                  source.ks string.quoted.single.ks
                       '
                       ^
                       source.ks string.quoted.single.ks punctuation.definition.string.end.ks
                        )
                        ^
                        source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks