original file
-----------------------------------
extern console

func foobar(text: String) {
    while var data ?= quxbaz(text) {
        console.log(`\(data)`)
    }
}

func quxbaz(text: String): String => text
-----------------------------------

grammar: kaoscript.tmLanguage
-----------------------------------
>
>extern console
 extern
 ^^^^^^
 source.ks keyword.control.dependency.extern.ks
        
       ^
       source.ks
        console
        ^^^^^^^
        source.ks variable.other.constant.ks
>
>
 
 ^
 source.ks
>
>func foobar(text: String) {
 func
 ^^^^
 source.ks storage.type.function.ks
      
     ^
     source.ks
      foobar
      ^^^^^^
      source.ks entity.name.function.ks
            (
            ^
            source.ks punctuation.definition.parameters.begin.bracket.round.ks
             text
             ^^^^
             source.ks variable.parameter.ks
                 :
                 ^
                 source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                   
                  ^
                  source.ks meta.type.annotation.ks
                   String
                   ^^^^^^
                   source.ks meta.type.annotation.ks support.type.primitive.ks
                         )
                         ^
                         source.ks punctuation.definition.parameters.end.bracket.round.ks
                           
                          ^
                          source.ks
                           {
                           ^
                           source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>    while var data ?= quxbaz(text) {
     
 ^^^^
 source.ks
     while
     ^^^^^
     source.ks keyword.control.loop.while.ks
           
          ^
          source.ks
           var
           ^^^
           source.ks storage.type.constant.ks
               
              ^
              source.ks
               data
               ^^^^
               source.ks meta.definition.variable.ks variable.other.ks
                    
                   ^
                   source.ks
                    ?=
                    ^^
                    source.ks keyword.operator.assignment.compound.ks
                       
                      ^
                      source.ks
                       quxbaz
                       ^^^^^^
                       source.ks entity.name.function.ks
                             (
                             ^
                             source.ks punctuation.definition.arguments.begin.bracket.round.ks
                              text
                              ^^^^
                              source.ks variable.other.ks
                                  )
                                  ^
                                  source.ks punctuation.definition.arguments.end.bracket.round.ks
                                    
                                   ^
                                   source.ks
                                    {
                                    ^
                                    source.ks punctuation.definition.block.begin.bracket.curly.ks
>
>        console.log(`\(data)`)
         
 ^^^^^^^^
 source.ks
         console
         ^^^^^^^
         source.ks variable.other.object.ks
                .
                ^
                source.ks punctuation.accessor.object.ks
                 log
                 ^^^
                 source.ks entity.name.function.ks
                    (
                    ^
                    source.ks punctuation.definition.arguments.begin.bracket.round.ks
                     `
                     ^
                     source.ks punctuation.definition.string.template.begin.ks
                      \(
                      ^^
                      source.ks punctuation.definition.template-expression.begin.ks
                        data
                        ^^^^
                        source.ks variable.other.ks
                            )
                            ^
                            source.ks punctuation.definition.template-expression.end.ks
                             `
                             ^
                             source.ks punctuation.definition.string.template.end.ks
                              )
                              ^
                              source.ks punctuation.definition.arguments.end.bracket.round.ks
>
>    }
     
 ^^^^
 source.ks
     }
     ^
     source.ks punctuation.definition.block.end.bracket.curly.ks
>
>}
 }
 ^
 source.ks punctuation.definition.block.end.bracket.curly.ks
>
>
 
 ^
 source.ks
>
>func quxbaz(text: String): String => text
 func
 ^^^^
 source.ks storage.type.function.ks
      
     ^
     source.ks
      quxbaz
      ^^^^^^
      source.ks entity.name.function.ks
            (
            ^
            source.ks punctuation.definition.parameters.begin.bracket.round.ks
             text
             ^^^^
             source.ks variable.parameter.ks
                 :
                 ^
                 source.ks meta.type.annotation.ks keyword.operator.type.annotation.ks
                   
                  ^
                  source.ks meta.type.annotation.ks
                   String
                   ^^^^^^
                   source.ks meta.type.annotation.ks support.type.primitive.ks
                         )
                         ^
                         source.ks punctuation.definition.parameters.end.bracket.round.ks
                          :
                          ^
                          source.ks meta.function.return-type.ks keyword.operator.type.annotation.ks
                            
                           ^
                           source.ks meta.function.return-type.ks
                            String
                            ^^^^^^
                            source.ks meta.function.return-type.ks support.type.primitive.ks
                                   
                                  ^
                                  source.ks
                                   =>
                                   ^^
                                   source.ks storage.type.function.arrow.ks
                                      
                                     ^
                                     source.ks
                                      text
                                      ^^^^
                                      source.ks variable.other.ks